{"ast":null,"code":"/*!\n * morgan\n * Copyright(c) 2010 Sencha Inc.\n * Copyright(c) 2011 TJ Holowaychuk\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2014-2017 Douglas Christopher Wilson\n * MIT Licensed\n */'use strict';/**\n * Module exports.\n * @public\n */module.exports=morgan;module.exports.compile=compile;module.exports.format=format;module.exports.token=token;/**\n * Module dependencies.\n * @private\n */var auth=require('basic-auth');var debug=require('debug')('morgan');var deprecate=require('depd')('morgan');var onFinished=require('on-finished');var onHeaders=require('on-headers');/**\n * Array of CLF month names.\n * @private\n */var CLF_MONTH=['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec'];/**\n * Default log buffer duration.\n * @private\n */var DEFAULT_BUFFER_DURATION=1000;/**\n * Create a logger middleware.\n *\n * @public\n * @param {String|Function} format\n * @param {Object} [options]\n * @return {Function} middleware\n */function morgan(format,options){var fmt=format;var opts=options||{};if(format&&typeof format==='object'){opts=format;fmt=opts.format||'default';// smart deprecation message\ndeprecate('morgan(options): use morgan('+(typeof fmt==='string'?JSON.stringify(fmt):'format')+', options) instead');}if(fmt===undefined){deprecate('undefined format: specify a format');}// output on request instead of response\nvar immediate=opts.immediate;// check if log entry should be skipped\nvar skip=opts.skip||false;// format function\nvar formatLine=typeof fmt!=='function'?getFormatFunction(fmt):fmt;// stream\nvar buffer=opts.buffer;var stream=opts.stream||process.stdout;// buffering support\nif(buffer){deprecate('buffer option');// flush interval\nvar interval=typeof buffer!=='number'?DEFAULT_BUFFER_DURATION:buffer;// swap the stream\nstream=createBufferStream(stream,interval);}return function logger(req,res,next){// request data\nreq._startAt=undefined;req._startTime=undefined;req._remoteAddress=getip(req);// response data\nres._startAt=undefined;res._startTime=undefined;// record request start\nrecordStartTime.call(req);function logRequest(){if(skip!==false&&skip(req,res)){debug('skip request');return;}var line=formatLine(morgan,req,res);if(line==null){debug('skip line');return;}debug('log request');stream.write(line+'\\n');};if(immediate){// immediate log\nlogRequest();}else{// record response start\nonHeaders(res,recordStartTime);// log when response finished\nonFinished(res,logRequest);}next();};}/**\n * Apache combined log format.\n */morgan.format('combined',':remote-addr - :remote-user [:date[clf]] \":method :url HTTP/:http-version\" :status :res[content-length] \":referrer\" \":user-agent\"');/**\n * Apache common log format.\n */morgan.format('common',':remote-addr - :remote-user [:date[clf]] \":method :url HTTP/:http-version\" :status :res[content-length]');/**\n * Default format.\n */morgan.format('default',':remote-addr - :remote-user [:date] \":method :url HTTP/:http-version\" :status :res[content-length] \":referrer\" \":user-agent\"');deprecate.property(morgan,'default','default format: use combined format');/**\n * Short format.\n */morgan.format('short',':remote-addr :remote-user :method :url HTTP/:http-version :status :res[content-length] - :response-time ms');/**\n * Tiny format.\n */morgan.format('tiny',':method :url :status :res[content-length] - :response-time ms');/**\n * dev (colored)\n */morgan.format('dev',function developmentFormatLine(tokens,req,res){// get the status code if response written\nvar status=headersSent(res)?res.statusCode:undefined;// get status color\nvar color=status>=500?31// red\n:status>=400?33// yellow\n:status>=300?36// cyan\n:status>=200?32// green\n:0;// no color\n// get colored function\nvar fn=developmentFormatLine[color];if(!fn){// compile\nfn=developmentFormatLine[color]=compile('\\x1b[0m:method :url \\x1b['+color+'m:status\\x1b[0m :response-time ms - :res[content-length]\\x1b[0m');}return fn(tokens,req,res);});/**\n * request url\n */morgan.token('url',function getUrlToken(req){return req.originalUrl||req.url;});/**\n * request method\n */morgan.token('method',function getMethodToken(req){return req.method;});/**\n * response time in milliseconds\n */morgan.token('response-time',function getResponseTimeToken(req,res,digits){if(!req._startAt||!res._startAt){// missing request and/or response start time\nreturn;}// calculate diff\nvar ms=(res._startAt[0]-req._startAt[0])*1e3+(res._startAt[1]-req._startAt[1])*1e-6;// return truncated value\nreturn ms.toFixed(digits===undefined?3:digits);});/**\n * total time in milliseconds\n */morgan.token('total-time',function getTotalTimeToken(req,res,digits){if(!req._startAt||!res._startAt){// missing request and/or response start time\nreturn;}// time elapsed from request start\nvar elapsed=process.hrtime(req._startAt);// cover to milliseconds\nvar ms=elapsed[0]*1e3+elapsed[1]*1e-6;// return truncated value\nreturn ms.toFixed(digits===undefined?3:digits);});/**\n * current date\n */morgan.token('date',function getDateToken(req,res,format){var date=new Date();switch(format||'web'){case'clf':return clfdate(date);case'iso':return date.toISOString();case'web':return date.toUTCString();}});/**\n * response status code\n */morgan.token('status',function getStatusToken(req,res){return headersSent(res)?String(res.statusCode):undefined;});/**\n * normalized referrer\n */morgan.token('referrer',function getReferrerToken(req){return req.headers.referer||req.headers.referrer;});/**\n * remote address\n */morgan.token('remote-addr',getip);/**\n * remote user\n */morgan.token('remote-user',function getRemoteUserToken(req){// parse basic credentials\nvar credentials=auth(req);// return username\nreturn credentials?credentials.name:undefined;});/**\n * HTTP version\n */morgan.token('http-version',function getHttpVersionToken(req){return req.httpVersionMajor+'.'+req.httpVersionMinor;});/**\n * UA string\n */morgan.token('user-agent',function getUserAgentToken(req){return req.headers['user-agent'];});/**\n * request header\n */morgan.token('req',function getRequestToken(req,res,field){// get header\nvar header=req.headers[field.toLowerCase()];return Array.isArray(header)?header.join(', '):header;});/**\n * response header\n */morgan.token('res',function getResponseHeader(req,res,field){if(!headersSent(res)){return undefined;}// get header\nvar header=res.getHeader(field);return Array.isArray(header)?header.join(', '):header;});/**\n * Format a Date in the common log format.\n *\n * @private\n * @param {Date} dateTime\n * @return {string}\n */function clfdate(dateTime){var date=dateTime.getUTCDate();var hour=dateTime.getUTCHours();var mins=dateTime.getUTCMinutes();var secs=dateTime.getUTCSeconds();var year=dateTime.getUTCFullYear();var month=CLF_MONTH[dateTime.getUTCMonth()];return pad2(date)+'/'+month+'/'+year+':'+pad2(hour)+':'+pad2(mins)+':'+pad2(secs)+' +0000';}/**\n * Compile a format string into a function.\n *\n * @param {string} format\n * @return {function}\n * @public\n */function compile(format){if(typeof format!=='string'){throw new TypeError('argument format must be a string');}var fmt=String(JSON.stringify(format));var js='  \"use strict\"\\n  return '+fmt.replace(/:([-\\w]{2,})(?:\\[([^\\]]+)\\])?/g,function(_,name,arg){var tokenArguments='req, res';var tokenFunction='tokens['+String(JSON.stringify(name))+']';if(arg!==undefined){tokenArguments+=', '+String(JSON.stringify(arg));}return'\" +\\n    ('+tokenFunction+'('+tokenArguments+') || \"-\") + \"';});// eslint-disable-next-line no-new-func\nreturn new Function('tokens, req, res',js);}/**\n * Create a basic buffering stream.\n *\n * @param {object} stream\n * @param {number} interval\n * @public\n */function createBufferStream(stream,interval){var buf=[];var timer=null;// flush function\nfunction flush(){timer=null;stream.write(buf.join(''));buf.length=0;}// write function\nfunction write(str){if(timer===null){timer=setTimeout(flush,interval);}buf.push(str);}// return a minimal \"stream\"\nreturn{write:write};}/**\n * Define a format with the given name.\n *\n * @param {string} name\n * @param {string|function} fmt\n * @public\n */function format(name,fmt){morgan[name]=fmt;return this;}/**\n * Lookup and compile a named format function.\n *\n * @param {string} name\n * @return {function}\n * @public\n */function getFormatFunction(name){// lookup format\nvar fmt=morgan[name]||name||morgan.default;// return compiled format\nreturn typeof fmt!=='function'?compile(fmt):fmt;}/**\n * Get request IP address.\n *\n * @private\n * @param {IncomingMessage} req\n * @return {string}\n */function getip(req){return req.ip||req._remoteAddress||req.connection&&req.connection.remoteAddress||undefined;}/**\n * Determine if the response headers have been sent.\n *\n * @param {object} res\n * @returns {boolean}\n * @private\n */function headersSent(res){// istanbul ignore next: node.js 0.8 support\nreturn typeof res.headersSent!=='boolean'?Boolean(res._header):res.headersSent;}/**\n * Pad number to two digits.\n *\n * @private\n * @param {number} num\n * @return {string}\n */function pad2(num){var str=String(num);// istanbul ignore next: num is current datetime\nreturn(str.length===1?'0':'')+str;}/**\n * Record the start time.\n * @private\n */function recordStartTime(){this._startAt=process.hrtime();this._startTime=new Date();}/**\n * Define a token function with the given name,\n * and callback fn(req, res).\n *\n * @param {string} name\n * @param {function} fn\n * @public\n */function token(name,fn){morgan[name]=fn;return this;}","map":{"version":3,"names":["module","exports","morgan","compile","format","token","auth","require","debug","deprecate","onFinished","onHeaders","CLF_MONTH","DEFAULT_BUFFER_DURATION","options","fmt","opts","JSON","stringify","undefined","immediate","skip","formatLine","getFormatFunction","buffer","stream","process","stdout","interval","createBufferStream","logger","req","res","next","_startAt","_startTime","_remoteAddress","getip","recordStartTime","call","logRequest","line","write","property","developmentFormatLine","tokens","status","headersSent","statusCode","color","fn","getUrlToken","originalUrl","url","getMethodToken","method","getResponseTimeToken","digits","ms","toFixed","getTotalTimeToken","elapsed","hrtime","getDateToken","date","Date","clfdate","toISOString","toUTCString","getStatusToken","String","getReferrerToken","headers","referer","referrer","getRemoteUserToken","credentials","name","getHttpVersionToken","httpVersionMajor","httpVersionMinor","getUserAgentToken","getRequestToken","field","header","toLowerCase","Array","isArray","join","getResponseHeader","getHeader","dateTime","getUTCDate","hour","getUTCHours","mins","getUTCMinutes","secs","getUTCSeconds","year","getUTCFullYear","month","getUTCMonth","pad2","TypeError","js","replace","_","arg","tokenArguments","tokenFunction","Function","buf","timer","flush","length","str","setTimeout","push","default","ip","connection","remoteAddress","Boolean","_header","num"],"sources":["C:/Users/Autor/Desktop/LaRuinaTV/api/src/node_modules/morgan/index.js"],"sourcesContent":["/*!\n * morgan\n * Copyright(c) 2010 Sencha Inc.\n * Copyright(c) 2011 TJ Holowaychuk\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2014-2017 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = morgan\nmodule.exports.compile = compile\nmodule.exports.format = format\nmodule.exports.token = token\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar auth = require('basic-auth')\nvar debug = require('debug')('morgan')\nvar deprecate = require('depd')('morgan')\nvar onFinished = require('on-finished')\nvar onHeaders = require('on-headers')\n\n/**\n * Array of CLF month names.\n * @private\n */\n\nvar CLF_MONTH = [\n  'Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun',\n  'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'\n]\n\n/**\n * Default log buffer duration.\n * @private\n */\n\nvar DEFAULT_BUFFER_DURATION = 1000\n\n/**\n * Create a logger middleware.\n *\n * @public\n * @param {String|Function} format\n * @param {Object} [options]\n * @return {Function} middleware\n */\n\nfunction morgan (format, options) {\n  var fmt = format\n  var opts = options || {}\n\n  if (format && typeof format === 'object') {\n    opts = format\n    fmt = opts.format || 'default'\n\n    // smart deprecation message\n    deprecate('morgan(options): use morgan(' + (typeof fmt === 'string' ? JSON.stringify(fmt) : 'format') + ', options) instead')\n  }\n\n  if (fmt === undefined) {\n    deprecate('undefined format: specify a format')\n  }\n\n  // output on request instead of response\n  var immediate = opts.immediate\n\n  // check if log entry should be skipped\n  var skip = opts.skip || false\n\n  // format function\n  var formatLine = typeof fmt !== 'function'\n    ? getFormatFunction(fmt)\n    : fmt\n\n  // stream\n  var buffer = opts.buffer\n  var stream = opts.stream || process.stdout\n\n  // buffering support\n  if (buffer) {\n    deprecate('buffer option')\n\n    // flush interval\n    var interval = typeof buffer !== 'number'\n      ? DEFAULT_BUFFER_DURATION\n      : buffer\n\n    // swap the stream\n    stream = createBufferStream(stream, interval)\n  }\n\n  return function logger (req, res, next) {\n    // request data\n    req._startAt = undefined\n    req._startTime = undefined\n    req._remoteAddress = getip(req)\n\n    // response data\n    res._startAt = undefined\n    res._startTime = undefined\n\n    // record request start\n    recordStartTime.call(req)\n\n    function logRequest () {\n      if (skip !== false && skip(req, res)) {\n        debug('skip request')\n        return\n      }\n\n      var line = formatLine(morgan, req, res)\n\n      if (line == null) {\n        debug('skip line')\n        return\n      }\n\n      debug('log request')\n      stream.write(line + '\\n')\n    };\n\n    if (immediate) {\n      // immediate log\n      logRequest()\n    } else {\n      // record response start\n      onHeaders(res, recordStartTime)\n\n      // log when response finished\n      onFinished(res, logRequest)\n    }\n\n    next()\n  }\n}\n\n/**\n * Apache combined log format.\n */\n\nmorgan.format('combined', ':remote-addr - :remote-user [:date[clf]] \":method :url HTTP/:http-version\" :status :res[content-length] \":referrer\" \":user-agent\"')\n\n/**\n * Apache common log format.\n */\n\nmorgan.format('common', ':remote-addr - :remote-user [:date[clf]] \":method :url HTTP/:http-version\" :status :res[content-length]')\n\n/**\n * Default format.\n */\n\nmorgan.format('default', ':remote-addr - :remote-user [:date] \":method :url HTTP/:http-version\" :status :res[content-length] \":referrer\" \":user-agent\"')\ndeprecate.property(morgan, 'default', 'default format: use combined format')\n\n/**\n * Short format.\n */\n\nmorgan.format('short', ':remote-addr :remote-user :method :url HTTP/:http-version :status :res[content-length] - :response-time ms')\n\n/**\n * Tiny format.\n */\n\nmorgan.format('tiny', ':method :url :status :res[content-length] - :response-time ms')\n\n/**\n * dev (colored)\n */\n\nmorgan.format('dev', function developmentFormatLine (tokens, req, res) {\n  // get the status code if response written\n  var status = headersSent(res)\n    ? res.statusCode\n    : undefined\n\n  // get status color\n  var color = status >= 500 ? 31 // red\n    : status >= 400 ? 33 // yellow\n      : status >= 300 ? 36 // cyan\n        : status >= 200 ? 32 // green\n          : 0 // no color\n\n  // get colored function\n  var fn = developmentFormatLine[color]\n\n  if (!fn) {\n    // compile\n    fn = developmentFormatLine[color] = compile('\\x1b[0m:method :url \\x1b[' +\n      color + 'm:status\\x1b[0m :response-time ms - :res[content-length]\\x1b[0m')\n  }\n\n  return fn(tokens, req, res)\n})\n\n/**\n * request url\n */\n\nmorgan.token('url', function getUrlToken (req) {\n  return req.originalUrl || req.url\n})\n\n/**\n * request method\n */\n\nmorgan.token('method', function getMethodToken (req) {\n  return req.method\n})\n\n/**\n * response time in milliseconds\n */\n\nmorgan.token('response-time', function getResponseTimeToken (req, res, digits) {\n  if (!req._startAt || !res._startAt) {\n    // missing request and/or response start time\n    return\n  }\n\n  // calculate diff\n  var ms = (res._startAt[0] - req._startAt[0]) * 1e3 +\n    (res._startAt[1] - req._startAt[1]) * 1e-6\n\n  // return truncated value\n  return ms.toFixed(digits === undefined ? 3 : digits)\n})\n\n/**\n * total time in milliseconds\n */\n\nmorgan.token('total-time', function getTotalTimeToken (req, res, digits) {\n  if (!req._startAt || !res._startAt) {\n    // missing request and/or response start time\n    return\n  }\n\n  // time elapsed from request start\n  var elapsed = process.hrtime(req._startAt)\n\n  // cover to milliseconds\n  var ms = (elapsed[0] * 1e3) + (elapsed[1] * 1e-6)\n\n  // return truncated value\n  return ms.toFixed(digits === undefined ? 3 : digits)\n})\n\n/**\n * current date\n */\n\nmorgan.token('date', function getDateToken (req, res, format) {\n  var date = new Date()\n\n  switch (format || 'web') {\n    case 'clf':\n      return clfdate(date)\n    case 'iso':\n      return date.toISOString()\n    case 'web':\n      return date.toUTCString()\n  }\n})\n\n/**\n * response status code\n */\n\nmorgan.token('status', function getStatusToken (req, res) {\n  return headersSent(res)\n    ? String(res.statusCode)\n    : undefined\n})\n\n/**\n * normalized referrer\n */\n\nmorgan.token('referrer', function getReferrerToken (req) {\n  return req.headers.referer || req.headers.referrer\n})\n\n/**\n * remote address\n */\n\nmorgan.token('remote-addr', getip)\n\n/**\n * remote user\n */\n\nmorgan.token('remote-user', function getRemoteUserToken (req) {\n  // parse basic credentials\n  var credentials = auth(req)\n\n  // return username\n  return credentials\n    ? credentials.name\n    : undefined\n})\n\n/**\n * HTTP version\n */\n\nmorgan.token('http-version', function getHttpVersionToken (req) {\n  return req.httpVersionMajor + '.' + req.httpVersionMinor\n})\n\n/**\n * UA string\n */\n\nmorgan.token('user-agent', function getUserAgentToken (req) {\n  return req.headers['user-agent']\n})\n\n/**\n * request header\n */\n\nmorgan.token('req', function getRequestToken (req, res, field) {\n  // get header\n  var header = req.headers[field.toLowerCase()]\n\n  return Array.isArray(header)\n    ? header.join(', ')\n    : header\n})\n\n/**\n * response header\n */\n\nmorgan.token('res', function getResponseHeader (req, res, field) {\n  if (!headersSent(res)) {\n    return undefined\n  }\n\n  // get header\n  var header = res.getHeader(field)\n\n  return Array.isArray(header)\n    ? header.join(', ')\n    : header\n})\n\n/**\n * Format a Date in the common log format.\n *\n * @private\n * @param {Date} dateTime\n * @return {string}\n */\n\nfunction clfdate (dateTime) {\n  var date = dateTime.getUTCDate()\n  var hour = dateTime.getUTCHours()\n  var mins = dateTime.getUTCMinutes()\n  var secs = dateTime.getUTCSeconds()\n  var year = dateTime.getUTCFullYear()\n\n  var month = CLF_MONTH[dateTime.getUTCMonth()]\n\n  return pad2(date) + '/' + month + '/' + year +\n    ':' + pad2(hour) + ':' + pad2(mins) + ':' + pad2(secs) +\n    ' +0000'\n}\n\n/**\n * Compile a format string into a function.\n *\n * @param {string} format\n * @return {function}\n * @public\n */\n\nfunction compile (format) {\n  if (typeof format !== 'string') {\n    throw new TypeError('argument format must be a string')\n  }\n\n  var fmt = String(JSON.stringify(format))\n  var js = '  \"use strict\"\\n  return ' + fmt.replace(/:([-\\w]{2,})(?:\\[([^\\]]+)\\])?/g, function (_, name, arg) {\n    var tokenArguments = 'req, res'\n    var tokenFunction = 'tokens[' + String(JSON.stringify(name)) + ']'\n\n    if (arg !== undefined) {\n      tokenArguments += ', ' + String(JSON.stringify(arg))\n    }\n\n    return '\" +\\n    (' + tokenFunction + '(' + tokenArguments + ') || \"-\") + \"'\n  })\n\n  // eslint-disable-next-line no-new-func\n  return new Function('tokens, req, res', js)\n}\n\n/**\n * Create a basic buffering stream.\n *\n * @param {object} stream\n * @param {number} interval\n * @public\n */\n\nfunction createBufferStream (stream, interval) {\n  var buf = []\n  var timer = null\n\n  // flush function\n  function flush () {\n    timer = null\n    stream.write(buf.join(''))\n    buf.length = 0\n  }\n\n  // write function\n  function write (str) {\n    if (timer === null) {\n      timer = setTimeout(flush, interval)\n    }\n\n    buf.push(str)\n  }\n\n  // return a minimal \"stream\"\n  return { write: write }\n}\n\n/**\n * Define a format with the given name.\n *\n * @param {string} name\n * @param {string|function} fmt\n * @public\n */\n\nfunction format (name, fmt) {\n  morgan[name] = fmt\n  return this\n}\n\n/**\n * Lookup and compile a named format function.\n *\n * @param {string} name\n * @return {function}\n * @public\n */\n\nfunction getFormatFunction (name) {\n  // lookup format\n  var fmt = morgan[name] || name || morgan.default\n\n  // return compiled format\n  return typeof fmt !== 'function'\n    ? compile(fmt)\n    : fmt\n}\n\n/**\n * Get request IP address.\n *\n * @private\n * @param {IncomingMessage} req\n * @return {string}\n */\n\nfunction getip (req) {\n  return req.ip ||\n    req._remoteAddress ||\n    (req.connection && req.connection.remoteAddress) ||\n    undefined\n}\n\n/**\n * Determine if the response headers have been sent.\n *\n * @param {object} res\n * @returns {boolean}\n * @private\n */\n\nfunction headersSent (res) {\n  // istanbul ignore next: node.js 0.8 support\n  return typeof res.headersSent !== 'boolean'\n    ? Boolean(res._header)\n    : res.headersSent\n}\n\n/**\n * Pad number to two digits.\n *\n * @private\n * @param {number} num\n * @return {string}\n */\n\nfunction pad2 (num) {\n  var str = String(num)\n\n  // istanbul ignore next: num is current datetime\n  return (str.length === 1 ? '0' : '') + str\n}\n\n/**\n * Record the start time.\n * @private\n */\n\nfunction recordStartTime () {\n  this._startAt = process.hrtime()\n  this._startTime = new Date()\n}\n\n/**\n * Define a token function with the given name,\n * and callback fn(req, res).\n *\n * @param {string} name\n * @param {function} fn\n * @public\n */\n\nfunction token (name, fn) {\n  morgan[name] = fn\n  return this\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}