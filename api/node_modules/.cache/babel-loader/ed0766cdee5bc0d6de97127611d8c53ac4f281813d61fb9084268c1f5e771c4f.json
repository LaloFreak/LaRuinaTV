{"ast":null,"code":"/*!\n * content-disposition\n * Copyright(c) 2014-2017 Douglas Christopher Wilson\n * MIT Licensed\n */'use strict';/**\n * Module exports.\n * @public\n */module.exports=contentDisposition;module.exports.parse=parse;/**\n * Module dependencies.\n * @private\n */var basename=require('path').basename;var Buffer=require('safe-buffer').Buffer;/**\n * RegExp to match non attr-char, *after* encodeURIComponent (i.e. not including \"%\")\n * @private\n */var ENCODE_URL_ATTR_CHAR_REGEXP=/[\\x00-\\x20\"'()*,/:;<=>?@[\\\\\\]{}\\x7f]/g;// eslint-disable-line no-control-regex\n/**\n * RegExp to match percent encoding escape.\n * @private\n */var HEX_ESCAPE_REGEXP=/%[0-9A-Fa-f]{2}/;var HEX_ESCAPE_REPLACE_REGEXP=/%([0-9A-Fa-f]{2})/g;/**\n * RegExp to match non-latin1 characters.\n * @private\n */var NON_LATIN1_REGEXP=/[^\\x20-\\x7e\\xa0-\\xff]/g;/**\n * RegExp to match quoted-pair in RFC 2616\n *\n * quoted-pair = \"\\\" CHAR\n * CHAR        = <any US-ASCII character (octets 0 - 127)>\n * @private\n */var QESC_REGEXP=/\\\\([\\u0000-\\u007f])/g;// eslint-disable-line no-control-regex\n/**\n * RegExp to match chars that must be quoted-pair in RFC 2616\n * @private\n */var QUOTE_REGEXP=/([\\\\\"])/g;/**\n * RegExp for various RFC 2616 grammar\n *\n * parameter     = token \"=\" ( token | quoted-string )\n * token         = 1*<any CHAR except CTLs or separators>\n * separators    = \"(\" | \")\" | \"<\" | \">\" | \"@\"\n *               | \",\" | \";\" | \":\" | \"\\\" | <\">\n *               | \"/\" | \"[\" | \"]\" | \"?\" | \"=\"\n *               | \"{\" | \"}\" | SP | HT\n * quoted-string = ( <\"> *(qdtext | quoted-pair ) <\"> )\n * qdtext        = <any TEXT except <\">>\n * quoted-pair   = \"\\\" CHAR\n * CHAR          = <any US-ASCII character (octets 0 - 127)>\n * TEXT          = <any OCTET except CTLs, but including LWS>\n * LWS           = [CRLF] 1*( SP | HT )\n * CRLF          = CR LF\n * CR            = <US-ASCII CR, carriage return (13)>\n * LF            = <US-ASCII LF, linefeed (10)>\n * SP            = <US-ASCII SP, space (32)>\n * HT            = <US-ASCII HT, horizontal-tab (9)>\n * CTL           = <any US-ASCII control character (octets 0 - 31) and DEL (127)>\n * OCTET         = <any 8-bit sequence of data>\n * @private\n */var PARAM_REGEXP=/;[\\x09\\x20]*([!#$%&'*+.0-9A-Z^_`a-z|~-]+)[\\x09\\x20]*=[\\x09\\x20]*(\"(?:[\\x20!\\x23-\\x5b\\x5d-\\x7e\\x80-\\xff]|\\\\[\\x20-\\x7e])*\"|[!#$%&'*+.0-9A-Z^_`a-z|~-]+)[\\x09\\x20]*/g;// eslint-disable-line no-control-regex\nvar TEXT_REGEXP=/^[\\x20-\\x7e\\x80-\\xff]+$/;var TOKEN_REGEXP=/^[!#$%&'*+.0-9A-Z^_`a-z|~-]+$/;/**\n * RegExp for various RFC 5987 grammar\n *\n * ext-value     = charset  \"'\" [ language ] \"'\" value-chars\n * charset       = \"UTF-8\" / \"ISO-8859-1\" / mime-charset\n * mime-charset  = 1*mime-charsetc\n * mime-charsetc = ALPHA / DIGIT\n *               / \"!\" / \"#\" / \"$\" / \"%\" / \"&\"\n *               / \"+\" / \"-\" / \"^\" / \"_\" / \"`\"\n *               / \"{\" / \"}\" / \"~\"\n * language      = ( 2*3ALPHA [ extlang ] )\n *               / 4ALPHA\n *               / 5*8ALPHA\n * extlang       = *3( \"-\" 3ALPHA )\n * value-chars   = *( pct-encoded / attr-char )\n * pct-encoded   = \"%\" HEXDIG HEXDIG\n * attr-char     = ALPHA / DIGIT\n *               / \"!\" / \"#\" / \"$\" / \"&\" / \"+\" / \"-\" / \".\"\n *               / \"^\" / \"_\" / \"`\" / \"|\" / \"~\"\n * @private\n */var EXT_VALUE_REGEXP=/^([A-Za-z0-9!#$%&+\\-^_`{}~]+)'(?:[A-Za-z]{2,3}(?:-[A-Za-z]{3}){0,3}|[A-Za-z]{4,8}|)'((?:%[0-9A-Fa-f]{2}|[A-Za-z0-9!#$&+.^_`|~-])+)$/;/**\n * RegExp for various RFC 6266 grammar\n *\n * disposition-type = \"inline\" | \"attachment\" | disp-ext-type\n * disp-ext-type    = token\n * disposition-parm = filename-parm | disp-ext-parm\n * filename-parm    = \"filename\" \"=\" value\n *                  | \"filename*\" \"=\" ext-value\n * disp-ext-parm    = token \"=\" value\n *                  | ext-token \"=\" ext-value\n * ext-token        = <the characters in token, followed by \"*\">\n * @private\n */var DISPOSITION_TYPE_REGEXP=/^([!#$%&'*+.0-9A-Z^_`a-z|~-]+)[\\x09\\x20]*(?:$|;)/;// eslint-disable-line no-control-regex\n/**\n * Create an attachment Content-Disposition header.\n *\n * @param {string} [filename]\n * @param {object} [options]\n * @param {string} [options.type=attachment]\n * @param {string|boolean} [options.fallback=true]\n * @return {string}\n * @public\n */function contentDisposition(filename,options){var opts=options||{};// get type\nvar type=opts.type||'attachment';// get parameters\nvar params=createparams(filename,opts.fallback);// format into string\nreturn format(new ContentDisposition(type,params));}/**\n * Create parameters object from filename and fallback.\n *\n * @param {string} [filename]\n * @param {string|boolean} [fallback=true]\n * @return {object}\n * @private\n */function createparams(filename,fallback){if(filename===undefined){return;}var params={};if(typeof filename!=='string'){throw new TypeError('filename must be a string');}// fallback defaults to true\nif(fallback===undefined){fallback=true;}if(typeof fallback!=='string'&&typeof fallback!=='boolean'){throw new TypeError('fallback must be a string or boolean');}if(typeof fallback==='string'&&NON_LATIN1_REGEXP.test(fallback)){throw new TypeError('fallback must be ISO-8859-1 string');}// restrict to file base name\nvar name=basename(filename);// determine if name is suitable for quoted string\nvar isQuotedString=TEXT_REGEXP.test(name);// generate fallback name\nvar fallbackName=typeof fallback!=='string'?fallback&&getlatin1(name):basename(fallback);var hasFallback=typeof fallbackName==='string'&&fallbackName!==name;// set extended filename parameter\nif(hasFallback||!isQuotedString||HEX_ESCAPE_REGEXP.test(name)){params['filename*']=name;}// set filename parameter\nif(isQuotedString||hasFallback){params.filename=hasFallback?fallbackName:name;}return params;}/**\n * Format object to Content-Disposition header.\n *\n * @param {object} obj\n * @param {string} obj.type\n * @param {object} [obj.parameters]\n * @return {string}\n * @private\n */function format(obj){var parameters=obj.parameters;var type=obj.type;if(!type||typeof type!=='string'||!TOKEN_REGEXP.test(type)){throw new TypeError('invalid type');}// start with normalized type\nvar string=String(type).toLowerCase();// append parameters\nif(parameters&&typeof parameters==='object'){var param;var params=Object.keys(parameters).sort();for(var i=0;i<params.length;i++){param=params[i];var val=param.substr(-1)==='*'?ustring(parameters[param]):qstring(parameters[param]);string+='; '+param+'='+val;}}return string;}/**\n * Decode a RFC 5987 field value (gracefully).\n *\n * @param {string} str\n * @return {string}\n * @private\n */function decodefield(str){var match=EXT_VALUE_REGEXP.exec(str);if(!match){throw new TypeError('invalid extended field value');}var charset=match[1].toLowerCase();var encoded=match[2];var value;// to binary string\nvar binary=encoded.replace(HEX_ESCAPE_REPLACE_REGEXP,pdecode);switch(charset){case'iso-8859-1':value=getlatin1(binary);break;case'utf-8':value=Buffer.from(binary,'binary').toString('utf8');break;default:throw new TypeError('unsupported charset in extended field');}return value;}/**\n * Get ISO-8859-1 version of string.\n *\n * @param {string} val\n * @return {string}\n * @private\n */function getlatin1(val){// simple Unicode -> ISO-8859-1 transformation\nreturn String(val).replace(NON_LATIN1_REGEXP,'?');}/**\n * Parse Content-Disposition header string.\n *\n * @param {string} string\n * @return {object}\n * @public\n */function parse(string){if(!string||typeof string!=='string'){throw new TypeError('argument string is required');}var match=DISPOSITION_TYPE_REGEXP.exec(string);if(!match){throw new TypeError('invalid type format');}// normalize type\nvar index=match[0].length;var type=match[1].toLowerCase();var key;var names=[];var params={};var value;// calculate index to start at\nindex=PARAM_REGEXP.lastIndex=match[0].substr(-1)===';'?index-1:index;// match parameters\nwhile(match=PARAM_REGEXP.exec(string)){if(match.index!==index){throw new TypeError('invalid parameter format');}index+=match[0].length;key=match[1].toLowerCase();value=match[2];if(names.indexOf(key)!==-1){throw new TypeError('invalid duplicate parameter');}names.push(key);if(key.indexOf('*')+1===key.length){// decode extended value\nkey=key.slice(0,-1);value=decodefield(value);// overwrite existing value\nparams[key]=value;continue;}if(typeof params[key]==='string'){continue;}if(value[0]==='\"'){// remove quotes and escapes\nvalue=value.substr(1,value.length-2).replace(QESC_REGEXP,'$1');}params[key]=value;}if(index!==-1&&index!==string.length){throw new TypeError('invalid parameter format');}return new ContentDisposition(type,params);}/**\n * Percent decode a single character.\n *\n * @param {string} str\n * @param {string} hex\n * @return {string}\n * @private\n */function pdecode(str,hex){return String.fromCharCode(parseInt(hex,16));}/**\n * Percent encode a single character.\n *\n * @param {string} char\n * @return {string}\n * @private\n */function pencode(char){return'%'+String(char).charCodeAt(0).toString(16).toUpperCase();}/**\n * Quote a string for HTTP.\n *\n * @param {string} val\n * @return {string}\n * @private\n */function qstring(val){var str=String(val);return'\"'+str.replace(QUOTE_REGEXP,'\\\\$1')+'\"';}/**\n * Encode a Unicode string for HTTP (RFC 5987).\n *\n * @param {string} val\n * @return {string}\n * @private\n */function ustring(val){var str=String(val);// percent encode as UTF-8\nvar encoded=encodeURIComponent(str).replace(ENCODE_URL_ATTR_CHAR_REGEXP,pencode);return'UTF-8\\'\\''+encoded;}/**\n * Class for parsed Content-Disposition header for v8 optimization\n *\n * @public\n * @param {string} type\n * @param {object} parameters\n * @constructor\n */function ContentDisposition(type,parameters){this.type=type;this.parameters=parameters;}","map":{"version":3,"names":["module","exports","contentDisposition","parse","basename","require","Buffer","ENCODE_URL_ATTR_CHAR_REGEXP","HEX_ESCAPE_REGEXP","HEX_ESCAPE_REPLACE_REGEXP","NON_LATIN1_REGEXP","QESC_REGEXP","QUOTE_REGEXP","PARAM_REGEXP","TEXT_REGEXP","TOKEN_REGEXP","EXT_VALUE_REGEXP","DISPOSITION_TYPE_REGEXP","filename","options","opts","type","params","createparams","fallback","format","ContentDisposition","undefined","TypeError","test","name","isQuotedString","fallbackName","getlatin1","hasFallback","obj","parameters","string","String","toLowerCase","param","Object","keys","sort","i","length","val","substr","ustring","qstring","decodefield","str","match","exec","charset","encoded","value","binary","replace","pdecode","from","toString","index","key","names","lastIndex","indexOf","push","slice","hex","fromCharCode","parseInt","pencode","char","charCodeAt","toUpperCase","encodeURIComponent"],"sources":["C:/Users/Autor/Desktop/LaRuinaTV/api/src/node_modules/content-disposition/index.js"],"sourcesContent":["/*!\n * content-disposition\n * Copyright(c) 2014-2017 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = contentDisposition\nmodule.exports.parse = parse\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar basename = require('path').basename\nvar Buffer = require('safe-buffer').Buffer\n\n/**\n * RegExp to match non attr-char, *after* encodeURIComponent (i.e. not including \"%\")\n * @private\n */\n\nvar ENCODE_URL_ATTR_CHAR_REGEXP = /[\\x00-\\x20\"'()*,/:;<=>?@[\\\\\\]{}\\x7f]/g // eslint-disable-line no-control-regex\n\n/**\n * RegExp to match percent encoding escape.\n * @private\n */\n\nvar HEX_ESCAPE_REGEXP = /%[0-9A-Fa-f]{2}/\nvar HEX_ESCAPE_REPLACE_REGEXP = /%([0-9A-Fa-f]{2})/g\n\n/**\n * RegExp to match non-latin1 characters.\n * @private\n */\n\nvar NON_LATIN1_REGEXP = /[^\\x20-\\x7e\\xa0-\\xff]/g\n\n/**\n * RegExp to match quoted-pair in RFC 2616\n *\n * quoted-pair = \"\\\" CHAR\n * CHAR        = <any US-ASCII character (octets 0 - 127)>\n * @private\n */\n\nvar QESC_REGEXP = /\\\\([\\u0000-\\u007f])/g // eslint-disable-line no-control-regex\n\n/**\n * RegExp to match chars that must be quoted-pair in RFC 2616\n * @private\n */\n\nvar QUOTE_REGEXP = /([\\\\\"])/g\n\n/**\n * RegExp for various RFC 2616 grammar\n *\n * parameter     = token \"=\" ( token | quoted-string )\n * token         = 1*<any CHAR except CTLs or separators>\n * separators    = \"(\" | \")\" | \"<\" | \">\" | \"@\"\n *               | \",\" | \";\" | \":\" | \"\\\" | <\">\n *               | \"/\" | \"[\" | \"]\" | \"?\" | \"=\"\n *               | \"{\" | \"}\" | SP | HT\n * quoted-string = ( <\"> *(qdtext | quoted-pair ) <\"> )\n * qdtext        = <any TEXT except <\">>\n * quoted-pair   = \"\\\" CHAR\n * CHAR          = <any US-ASCII character (octets 0 - 127)>\n * TEXT          = <any OCTET except CTLs, but including LWS>\n * LWS           = [CRLF] 1*( SP | HT )\n * CRLF          = CR LF\n * CR            = <US-ASCII CR, carriage return (13)>\n * LF            = <US-ASCII LF, linefeed (10)>\n * SP            = <US-ASCII SP, space (32)>\n * HT            = <US-ASCII HT, horizontal-tab (9)>\n * CTL           = <any US-ASCII control character (octets 0 - 31) and DEL (127)>\n * OCTET         = <any 8-bit sequence of data>\n * @private\n */\n\nvar PARAM_REGEXP = /;[\\x09\\x20]*([!#$%&'*+.0-9A-Z^_`a-z|~-]+)[\\x09\\x20]*=[\\x09\\x20]*(\"(?:[\\x20!\\x23-\\x5b\\x5d-\\x7e\\x80-\\xff]|\\\\[\\x20-\\x7e])*\"|[!#$%&'*+.0-9A-Z^_`a-z|~-]+)[\\x09\\x20]*/g // eslint-disable-line no-control-regex\nvar TEXT_REGEXP = /^[\\x20-\\x7e\\x80-\\xff]+$/\nvar TOKEN_REGEXP = /^[!#$%&'*+.0-9A-Z^_`a-z|~-]+$/\n\n/**\n * RegExp for various RFC 5987 grammar\n *\n * ext-value     = charset  \"'\" [ language ] \"'\" value-chars\n * charset       = \"UTF-8\" / \"ISO-8859-1\" / mime-charset\n * mime-charset  = 1*mime-charsetc\n * mime-charsetc = ALPHA / DIGIT\n *               / \"!\" / \"#\" / \"$\" / \"%\" / \"&\"\n *               / \"+\" / \"-\" / \"^\" / \"_\" / \"`\"\n *               / \"{\" / \"}\" / \"~\"\n * language      = ( 2*3ALPHA [ extlang ] )\n *               / 4ALPHA\n *               / 5*8ALPHA\n * extlang       = *3( \"-\" 3ALPHA )\n * value-chars   = *( pct-encoded / attr-char )\n * pct-encoded   = \"%\" HEXDIG HEXDIG\n * attr-char     = ALPHA / DIGIT\n *               / \"!\" / \"#\" / \"$\" / \"&\" / \"+\" / \"-\" / \".\"\n *               / \"^\" / \"_\" / \"`\" / \"|\" / \"~\"\n * @private\n */\n\nvar EXT_VALUE_REGEXP = /^([A-Za-z0-9!#$%&+\\-^_`{}~]+)'(?:[A-Za-z]{2,3}(?:-[A-Za-z]{3}){0,3}|[A-Za-z]{4,8}|)'((?:%[0-9A-Fa-f]{2}|[A-Za-z0-9!#$&+.^_`|~-])+)$/\n\n/**\n * RegExp for various RFC 6266 grammar\n *\n * disposition-type = \"inline\" | \"attachment\" | disp-ext-type\n * disp-ext-type    = token\n * disposition-parm = filename-parm | disp-ext-parm\n * filename-parm    = \"filename\" \"=\" value\n *                  | \"filename*\" \"=\" ext-value\n * disp-ext-parm    = token \"=\" value\n *                  | ext-token \"=\" ext-value\n * ext-token        = <the characters in token, followed by \"*\">\n * @private\n */\n\nvar DISPOSITION_TYPE_REGEXP = /^([!#$%&'*+.0-9A-Z^_`a-z|~-]+)[\\x09\\x20]*(?:$|;)/ // eslint-disable-line no-control-regex\n\n/**\n * Create an attachment Content-Disposition header.\n *\n * @param {string} [filename]\n * @param {object} [options]\n * @param {string} [options.type=attachment]\n * @param {string|boolean} [options.fallback=true]\n * @return {string}\n * @public\n */\n\nfunction contentDisposition (filename, options) {\n  var opts = options || {}\n\n  // get type\n  var type = opts.type || 'attachment'\n\n  // get parameters\n  var params = createparams(filename, opts.fallback)\n\n  // format into string\n  return format(new ContentDisposition(type, params))\n}\n\n/**\n * Create parameters object from filename and fallback.\n *\n * @param {string} [filename]\n * @param {string|boolean} [fallback=true]\n * @return {object}\n * @private\n */\n\nfunction createparams (filename, fallback) {\n  if (filename === undefined) {\n    return\n  }\n\n  var params = {}\n\n  if (typeof filename !== 'string') {\n    throw new TypeError('filename must be a string')\n  }\n\n  // fallback defaults to true\n  if (fallback === undefined) {\n    fallback = true\n  }\n\n  if (typeof fallback !== 'string' && typeof fallback !== 'boolean') {\n    throw new TypeError('fallback must be a string or boolean')\n  }\n\n  if (typeof fallback === 'string' && NON_LATIN1_REGEXP.test(fallback)) {\n    throw new TypeError('fallback must be ISO-8859-1 string')\n  }\n\n  // restrict to file base name\n  var name = basename(filename)\n\n  // determine if name is suitable for quoted string\n  var isQuotedString = TEXT_REGEXP.test(name)\n\n  // generate fallback name\n  var fallbackName = typeof fallback !== 'string'\n    ? fallback && getlatin1(name)\n    : basename(fallback)\n  var hasFallback = typeof fallbackName === 'string' && fallbackName !== name\n\n  // set extended filename parameter\n  if (hasFallback || !isQuotedString || HEX_ESCAPE_REGEXP.test(name)) {\n    params['filename*'] = name\n  }\n\n  // set filename parameter\n  if (isQuotedString || hasFallback) {\n    params.filename = hasFallback\n      ? fallbackName\n      : name\n  }\n\n  return params\n}\n\n/**\n * Format object to Content-Disposition header.\n *\n * @param {object} obj\n * @param {string} obj.type\n * @param {object} [obj.parameters]\n * @return {string}\n * @private\n */\n\nfunction format (obj) {\n  var parameters = obj.parameters\n  var type = obj.type\n\n  if (!type || typeof type !== 'string' || !TOKEN_REGEXP.test(type)) {\n    throw new TypeError('invalid type')\n  }\n\n  // start with normalized type\n  var string = String(type).toLowerCase()\n\n  // append parameters\n  if (parameters && typeof parameters === 'object') {\n    var param\n    var params = Object.keys(parameters).sort()\n\n    for (var i = 0; i < params.length; i++) {\n      param = params[i]\n\n      var val = param.substr(-1) === '*'\n        ? ustring(parameters[param])\n        : qstring(parameters[param])\n\n      string += '; ' + param + '=' + val\n    }\n  }\n\n  return string\n}\n\n/**\n * Decode a RFC 5987 field value (gracefully).\n *\n * @param {string} str\n * @return {string}\n * @private\n */\n\nfunction decodefield (str) {\n  var match = EXT_VALUE_REGEXP.exec(str)\n\n  if (!match) {\n    throw new TypeError('invalid extended field value')\n  }\n\n  var charset = match[1].toLowerCase()\n  var encoded = match[2]\n  var value\n\n  // to binary string\n  var binary = encoded.replace(HEX_ESCAPE_REPLACE_REGEXP, pdecode)\n\n  switch (charset) {\n    case 'iso-8859-1':\n      value = getlatin1(binary)\n      break\n    case 'utf-8':\n      value = Buffer.from(binary, 'binary').toString('utf8')\n      break\n    default:\n      throw new TypeError('unsupported charset in extended field')\n  }\n\n  return value\n}\n\n/**\n * Get ISO-8859-1 version of string.\n *\n * @param {string} val\n * @return {string}\n * @private\n */\n\nfunction getlatin1 (val) {\n  // simple Unicode -> ISO-8859-1 transformation\n  return String(val).replace(NON_LATIN1_REGEXP, '?')\n}\n\n/**\n * Parse Content-Disposition header string.\n *\n * @param {string} string\n * @return {object}\n * @public\n */\n\nfunction parse (string) {\n  if (!string || typeof string !== 'string') {\n    throw new TypeError('argument string is required')\n  }\n\n  var match = DISPOSITION_TYPE_REGEXP.exec(string)\n\n  if (!match) {\n    throw new TypeError('invalid type format')\n  }\n\n  // normalize type\n  var index = match[0].length\n  var type = match[1].toLowerCase()\n\n  var key\n  var names = []\n  var params = {}\n  var value\n\n  // calculate index to start at\n  index = PARAM_REGEXP.lastIndex = match[0].substr(-1) === ';'\n    ? index - 1\n    : index\n\n  // match parameters\n  while ((match = PARAM_REGEXP.exec(string))) {\n    if (match.index !== index) {\n      throw new TypeError('invalid parameter format')\n    }\n\n    index += match[0].length\n    key = match[1].toLowerCase()\n    value = match[2]\n\n    if (names.indexOf(key) !== -1) {\n      throw new TypeError('invalid duplicate parameter')\n    }\n\n    names.push(key)\n\n    if (key.indexOf('*') + 1 === key.length) {\n      // decode extended value\n      key = key.slice(0, -1)\n      value = decodefield(value)\n\n      // overwrite existing value\n      params[key] = value\n      continue\n    }\n\n    if (typeof params[key] === 'string') {\n      continue\n    }\n\n    if (value[0] === '\"') {\n      // remove quotes and escapes\n      value = value\n        .substr(1, value.length - 2)\n        .replace(QESC_REGEXP, '$1')\n    }\n\n    params[key] = value\n  }\n\n  if (index !== -1 && index !== string.length) {\n    throw new TypeError('invalid parameter format')\n  }\n\n  return new ContentDisposition(type, params)\n}\n\n/**\n * Percent decode a single character.\n *\n * @param {string} str\n * @param {string} hex\n * @return {string}\n * @private\n */\n\nfunction pdecode (str, hex) {\n  return String.fromCharCode(parseInt(hex, 16))\n}\n\n/**\n * Percent encode a single character.\n *\n * @param {string} char\n * @return {string}\n * @private\n */\n\nfunction pencode (char) {\n  return '%' + String(char)\n    .charCodeAt(0)\n    .toString(16)\n    .toUpperCase()\n}\n\n/**\n * Quote a string for HTTP.\n *\n * @param {string} val\n * @return {string}\n * @private\n */\n\nfunction qstring (val) {\n  var str = String(val)\n\n  return '\"' + str.replace(QUOTE_REGEXP, '\\\\$1') + '\"'\n}\n\n/**\n * Encode a Unicode string for HTTP (RFC 5987).\n *\n * @param {string} val\n * @return {string}\n * @private\n */\n\nfunction ustring (val) {\n  var str = String(val)\n\n  // percent encode as UTF-8\n  var encoded = encodeURIComponent(str)\n    .replace(ENCODE_URL_ATTR_CHAR_REGEXP, pencode)\n\n  return 'UTF-8\\'\\'' + encoded\n}\n\n/**\n * Class for parsed Content-Disposition header for v8 optimization\n *\n * @public\n * @param {string} type\n * @param {object} parameters\n * @constructor\n */\n\nfunction ContentDisposition (type, parameters) {\n  this.type = type\n  this.parameters = parameters\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}