{"ast":null,"code":"/*!\n * express\n * Copyright(c) 2009-2013 TJ Holowaychuk\n * Copyright(c) 2013 Roman Shtylman\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */'use strict';/**\n * Module dependencies.\n * @private\n */var debug=require('debug')('express:view');var path=require('path');var fs=require('fs');/**\n * Module variables.\n * @private\n */var dirname=path.dirname;var basename=path.basename;var extname=path.extname;var join=path.join;var resolve=path.resolve;/**\n * Module exports.\n * @public\n */module.exports=View;/**\n * Initialize a new `View` with the given `name`.\n *\n * Options:\n *\n *   - `defaultEngine` the default template engine name\n *   - `engines` template engine require() cache\n *   - `root` root path for view lookup\n *\n * @param {string} name\n * @param {object} options\n * @public\n */function View(name,options){var opts=options||{};this.defaultEngine=opts.defaultEngine;this.ext=extname(name);this.name=name;this.root=opts.root;if(!this.ext&&!this.defaultEngine){throw new Error('No default engine was specified and no extension was provided.');}var fileName=name;if(!this.ext){// get extension from default engine name\nthis.ext=this.defaultEngine[0]!=='.'?'.'+this.defaultEngine:this.defaultEngine;fileName+=this.ext;}if(!opts.engines[this.ext]){// load engine\nvar mod=this.ext.slice(1);debug('require \"%s\"',mod);// default engine export\nvar fn=require(mod).__express;if(typeof fn!=='function'){throw new Error('Module \"'+mod+'\" does not provide a view engine.');}opts.engines[this.ext]=fn;}// store loaded engine\nthis.engine=opts.engines[this.ext];// lookup path\nthis.path=this.lookup(fileName);}/**\n * Lookup view by the given `name`\n *\n * @param {string} name\n * @private\n */View.prototype.lookup=function lookup(name){var path;var roots=[].concat(this.root);debug('lookup \"%s\"',name);for(var i=0;i<roots.length&&!path;i++){var root=roots[i];// resolve the path\nvar loc=resolve(root,name);var dir=dirname(loc);var file=basename(loc);// resolve the file\npath=this.resolve(dir,file);}return path;};/**\n * Render with the given options.\n *\n * @param {object} options\n * @param {function} callback\n * @private\n */View.prototype.render=function render(options,callback){debug('render \"%s\"',this.path);this.engine(this.path,options,callback);};/**\n * Resolve the file within the given directory.\n *\n * @param {string} dir\n * @param {string} file\n * @private\n */View.prototype.resolve=function resolve(dir,file){var ext=this.ext;// <path>.<ext>\nvar path=join(dir,file);var stat=tryStat(path);if(stat&&stat.isFile()){return path;}// <path>/index.<ext>\npath=join(dir,basename(file,ext),'index'+ext);stat=tryStat(path);if(stat&&stat.isFile()){return path;}};/**\n * Return a stat, maybe.\n *\n * @param {string} path\n * @return {fs.Stats}\n * @private\n */function tryStat(path){debug('stat \"%s\"',path);try{return fs.statSync(path);}catch(e){return undefined;}}","map":{"version":3,"names":["debug","require","path","fs","dirname","basename","extname","join","resolve","module","exports","View","name","options","opts","defaultEngine","ext","root","Error","fileName","engines","mod","slice","fn","__express","engine","lookup","prototype","roots","concat","i","length","loc","dir","file","render","callback","stat","tryStat","isFile","statSync","e","undefined"],"sources":["C:/Users/Autor/Desktop/LaRuinaTV/api/src/node_modules/express/lib/view.js"],"sourcesContent":["/*!\n * express\n * Copyright(c) 2009-2013 TJ Holowaychuk\n * Copyright(c) 2013 Roman Shtylman\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar debug = require('debug')('express:view');\nvar path = require('path');\nvar fs = require('fs');\n\n/**\n * Module variables.\n * @private\n */\n\nvar dirname = path.dirname;\nvar basename = path.basename;\nvar extname = path.extname;\nvar join = path.join;\nvar resolve = path.resolve;\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = View;\n\n/**\n * Initialize a new `View` with the given `name`.\n *\n * Options:\n *\n *   - `defaultEngine` the default template engine name\n *   - `engines` template engine require() cache\n *   - `root` root path for view lookup\n *\n * @param {string} name\n * @param {object} options\n * @public\n */\n\nfunction View(name, options) {\n  var opts = options || {};\n\n  this.defaultEngine = opts.defaultEngine;\n  this.ext = extname(name);\n  this.name = name;\n  this.root = opts.root;\n\n  if (!this.ext && !this.defaultEngine) {\n    throw new Error('No default engine was specified and no extension was provided.');\n  }\n\n  var fileName = name;\n\n  if (!this.ext) {\n    // get extension from default engine name\n    this.ext = this.defaultEngine[0] !== '.'\n      ? '.' + this.defaultEngine\n      : this.defaultEngine;\n\n    fileName += this.ext;\n  }\n\n  if (!opts.engines[this.ext]) {\n    // load engine\n    var mod = this.ext.slice(1)\n    debug('require \"%s\"', mod)\n\n    // default engine export\n    var fn = require(mod).__express\n\n    if (typeof fn !== 'function') {\n      throw new Error('Module \"' + mod + '\" does not provide a view engine.')\n    }\n\n    opts.engines[this.ext] = fn\n  }\n\n  // store loaded engine\n  this.engine = opts.engines[this.ext];\n\n  // lookup path\n  this.path = this.lookup(fileName);\n}\n\n/**\n * Lookup view by the given `name`\n *\n * @param {string} name\n * @private\n */\n\nView.prototype.lookup = function lookup(name) {\n  var path;\n  var roots = [].concat(this.root);\n\n  debug('lookup \"%s\"', name);\n\n  for (var i = 0; i < roots.length && !path; i++) {\n    var root = roots[i];\n\n    // resolve the path\n    var loc = resolve(root, name);\n    var dir = dirname(loc);\n    var file = basename(loc);\n\n    // resolve the file\n    path = this.resolve(dir, file);\n  }\n\n  return path;\n};\n\n/**\n * Render with the given options.\n *\n * @param {object} options\n * @param {function} callback\n * @private\n */\n\nView.prototype.render = function render(options, callback) {\n  debug('render \"%s\"', this.path);\n  this.engine(this.path, options, callback);\n};\n\n/**\n * Resolve the file within the given directory.\n *\n * @param {string} dir\n * @param {string} file\n * @private\n */\n\nView.prototype.resolve = function resolve(dir, file) {\n  var ext = this.ext;\n\n  // <path>.<ext>\n  var path = join(dir, file);\n  var stat = tryStat(path);\n\n  if (stat && stat.isFile()) {\n    return path;\n  }\n\n  // <path>/index.<ext>\n  path = join(dir, basename(file, ext), 'index' + ext);\n  stat = tryStat(path);\n\n  if (stat && stat.isFile()) {\n    return path;\n  }\n};\n\n/**\n * Return a stat, maybe.\n *\n * @param {string} path\n * @return {fs.Stats}\n * @private\n */\n\nfunction tryStat(path) {\n  debug('stat \"%s\"', path);\n\n  try {\n    return fs.statSync(path);\n  } catch (e) {\n    return undefined;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}