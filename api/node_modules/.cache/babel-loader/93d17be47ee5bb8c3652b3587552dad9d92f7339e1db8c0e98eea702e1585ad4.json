{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/Autor/Desktop/LaRuinaTV/api/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"C:/Users/Autor/Desktop/LaRuinaTV/api/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";var express=require('express');var server=express.Router();var _require=require('../../Controllers/index'),getPosts=_require.getPosts;server.get('/',/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(req,res){var media;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.next=2;return getPosts();case 2:media=_context.sent;return _context.abrupt(\"return\",res.status(200).send(media));case 4:case\"end\":return _context.stop();}},_callee);}));return function(_x,_x2){return _ref.apply(this,arguments);};}());server.get('/:id',/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(req,res){var id,media;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1)switch(_context2.prev=_context2.next){case 0:id=req.params.id;_context2.next=3;return getPosts().then(function(res){return res.filter(function(el){return el.id===+id;});});case 3:media=_context2.sent;if(!media){_context2.next=6;break;}return _context2.abrupt(\"return\",res.send(media));case 6:res.status(400).send(\"El id ingresado es incorrecto\");case 7:case\"end\":return _context2.stop();}},_callee2);}));return function(_x3,_x4){return _ref2.apply(this,arguments);};}());module.exports=server;","map":{"version":3,"names":["express","require","server","Router","getPosts","get","req","res","media","status","send","id","params","then","filter","el","module","exports"],"sources":["C:/Users/Autor/Desktop/LaRuinaTV/api/src/Routes/apps/posts.js"],"sourcesContent":["const express = require('express')\r\nconst server = express.Router()\r\nconst { getPosts } = require('../../Controllers/index')\r\n\r\nserver.get('/', async (req, res) => {\r\n    const media = await getPosts()\r\n    return res.status(200).send(media)\r\n})\r\n\r\nserver.get('/:id', async (req, res) => {\r\n    let {id} = req.params\r\n    let media = await getPosts().then(res => res.filter(el => {return el.id === +id}))\r\n    if (media) return res.send(media)\r\n    res.status(400).send(\"El id ingresado es incorrecto\")\r\n})\r\n\r\nmodule.exports = server"],"mappings":"oQAAA,GAAMA,QAAO,CAAGC,OAAO,CAAC,SAAS,CAAC,CAClC,GAAMC,OAAM,CAAGF,OAAO,CAACG,MAAM,EAAE,CAC/B,aAAqBF,OAAO,CAAC,yBAAyB,CAAC,CAA/CG,QAAQ,UAARA,QAAQ,CAEhBF,MAAM,CAACG,GAAG,CAAC,GAAG,4FAAE,iBAAOC,GAAG,CAAEC,GAAG,mJACPH,SAAQ,EAAE,QAAxBI,KAAK,+CACJD,GAAG,CAACE,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAACF,KAAK,CAAC,uDACrC,mEAAC,CAEFN,MAAM,CAACG,GAAG,CAAC,MAAM,6FAAE,kBAAOC,GAAG,CAAEC,GAAG,oIACzBI,EAAE,CAAIL,GAAG,CAACM,MAAM,CAAhBD,EAAE,wBACWP,SAAQ,EAAE,CAACS,IAAI,CAAC,SAAAN,GAAG,QAAIA,IAAG,CAACO,MAAM,CAAC,SAAAC,EAAE,CAAI,CAAC,MAAOA,GAAE,CAACJ,EAAE,GAAK,CAACA,EAAE,EAAC,CAAC,GAAC,QAA9EH,KAAK,oBACLA,KAAK,2DAASD,GAAG,CAACG,IAAI,CAACF,KAAK,CAAC,SACjCD,GAAG,CAACE,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC,+BAA+B,CAAC,wDACxD,qEAAC,CAEFM,MAAM,CAACC,OAAO,CAAGf,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}