{"ast":null,"code":"/**\n * This is the web browser implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */exports=module.exports=require('./debug');exports.log=log;exports.formatArgs=formatArgs;exports.save=save;exports.load=load;exports.useColors=useColors;exports.storage='undefined'!=typeof chrome&&'undefined'!=typeof chrome.storage?chrome.storage.local:localstorage();/**\n * Colors.\n */exports.colors=['lightseagreen','forestgreen','goldenrod','dodgerblue','darkorchid','crimson'];/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */function useColors(){// NB: In an Electron preload script, document will be defined but not fully\n// initialized. Since we know we're in Chrome, we'll just detect this case\n// explicitly\nif(typeof window!=='undefined'&&window.process&&window.process.type==='renderer'){return true;}// is webkit? http://stackoverflow.com/a/16459606/376773\n// document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\nreturn typeof document!=='undefined'&&document.documentElement&&document.documentElement.style&&document.documentElement.style.WebkitAppearance||// is firebug? http://stackoverflow.com/a/398120/376773\ntypeof window!=='undefined'&&window.console&&(window.console.firebug||window.console.exception&&window.console.table)||// is firefox >= v31?\n// https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\ntypeof navigator!=='undefined'&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/)&&parseInt(RegExp.$1,10)>=31||// double check webkit in userAgent just in case we are in a worker\ntypeof navigator!=='undefined'&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/);}/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */exports.formatters.j=function(v){try{return JSON.stringify(v);}catch(err){return'[UnexpectedJSONParseError]: '+err.message;}};/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */function formatArgs(args){var useColors=this.useColors;args[0]=(useColors?'%c':'')+this.namespace+(useColors?' %c':' ')+args[0]+(useColors?'%c ':' ')+'+'+exports.humanize(this.diff);if(!useColors)return;var c='color: '+this.color;args.splice(1,0,c,'color: inherit');// the final \"%c\" is somewhat tricky, because there could be other\n// arguments passed either before or after the %c, so we need to\n// figure out the correct index to insert the CSS into\nvar index=0;var lastC=0;args[0].replace(/%[a-zA-Z%]/g,function(match){if('%%'===match)return;index++;if('%c'===match){// we only are interested in the *last* %c\n// (the user may have provided their own)\nlastC=index;}});args.splice(lastC,0,c);}/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */function log(){// this hackery is required for IE8/9, where\n// the `console.log` function doesn't have 'apply'\nreturn'object'===typeof console&&console.log&&Function.prototype.apply.call(console.log,console,arguments);}/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */function save(namespaces){try{if(null==namespaces){exports.storage.removeItem('debug');}else{exports.storage.debug=namespaces;}}catch(e){}}/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */function load(){var r;try{r=exports.storage.debug;}catch(e){}// If debug isn't set in LS, and we're in Electron, try to load $DEBUG\nif(!r&&typeof process!=='undefined'&&'env'in process){r=process.env.DEBUG;}return r;}/**\n * Enable namespaces listed in `localStorage.debug` initially.\n */exports.enable(load());/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */function localstorage(){try{return window.localStorage;}catch(e){}}","map":{"version":3,"names":["exports","module","require","log","formatArgs","save","load","useColors","storage","chrome","local","localstorage","colors","window","process","type","document","documentElement","style","WebkitAppearance","console","firebug","exception","table","navigator","userAgent","toLowerCase","match","parseInt","RegExp","$1","formatters","j","v","JSON","stringify","err","message","args","namespace","humanize","diff","c","color","splice","index","lastC","replace","Function","prototype","apply","call","arguments","namespaces","removeItem","debug","e","r","env","DEBUG","enable","localStorage"],"sources":["C:/Users/Autor/Desktop/LaRuinaTV/api/src/node_modules/debug/src/browser.js"],"sourcesContent":["/**\n * This is the web browser implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = require('./debug');\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = 'undefined' != typeof chrome\n               && 'undefined' != typeof chrome.storage\n                  ? chrome.storage.local\n                  : localstorage();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n  'lightseagreen',\n  'forestgreen',\n  'goldenrod',\n  'dodgerblue',\n  'darkorchid',\n  'crimson'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\nfunction useColors() {\n  // NB: In an Electron preload script, document will be defined but not fully\n  // initialized. Since we know we're in Chrome, we'll just detect this case\n  // explicitly\n  if (typeof window !== 'undefined' && window.process && window.process.type === 'renderer') {\n    return true;\n  }\n\n  // is webkit? http://stackoverflow.com/a/16459606/376773\n  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n  return (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n    // is firebug? http://stackoverflow.com/a/398120/376773\n    (typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n    // is firefox >= v31?\n    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n    // double check webkit in userAgent just in case we are in a worker\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nexports.formatters.j = function(v) {\n  try {\n    return JSON.stringify(v);\n  } catch (err) {\n    return '[UnexpectedJSONParseError]: ' + err.message;\n  }\n};\n\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n  var useColors = this.useColors;\n\n  args[0] = (useColors ? '%c' : '')\n    + this.namespace\n    + (useColors ? ' %c' : ' ')\n    + args[0]\n    + (useColors ? '%c ' : ' ')\n    + '+' + exports.humanize(this.diff);\n\n  if (!useColors) return;\n\n  var c = 'color: ' + this.color;\n  args.splice(1, 0, c, 'color: inherit')\n\n  // the final \"%c\" is somewhat tricky, because there could be other\n  // arguments passed either before or after the %c, so we need to\n  // figure out the correct index to insert the CSS into\n  var index = 0;\n  var lastC = 0;\n  args[0].replace(/%[a-zA-Z%]/g, function(match) {\n    if ('%%' === match) return;\n    index++;\n    if ('%c' === match) {\n      // we only are interested in the *last* %c\n      // (the user may have provided their own)\n      lastC = index;\n    }\n  });\n\n  args.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\n\nfunction log() {\n  // this hackery is required for IE8/9, where\n  // the `console.log` function doesn't have 'apply'\n  return 'object' === typeof console\n    && console.log\n    && Function.prototype.apply.call(console.log, console, arguments);\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\nfunction save(namespaces) {\n  try {\n    if (null == namespaces) {\n      exports.storage.removeItem('debug');\n    } else {\n      exports.storage.debug = namespaces;\n    }\n  } catch(e) {}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n  var r;\n  try {\n    r = exports.storage.debug;\n  } catch(e) {}\n\n  // If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n  if (!r && typeof process !== 'undefined' && 'env' in process) {\n    r = process.env.DEBUG;\n  }\n\n  return r;\n}\n\n/**\n * Enable namespaces listed in `localStorage.debug` initially.\n */\n\nexports.enable(load());\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n  try {\n    return window.localStorage;\n  } catch (e) {}\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}