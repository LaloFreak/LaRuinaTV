{"ast":null,"code":"var users=require('../users.json');function findUser(a,m){var userFound=users.filter(function(e){return e.alias===a||e.email===m;});return userFound;}function findUsers(ip){var usersFound=users.filter(function(e){return e.userStatus.filter(function(e){return e.ip.filter(function(el){return el.id===ip;});});});return usersFound;}function findUserByIp(ip){var userFound=users.filter(function(e){return e.userStatus.find(function(e){return e.ip.find(function(e){return e.id===ip&&e.onlineState===true;});});}).at(0);return userFound;}function findUserState(ip){var userFound=users.filter(function(e){return e.userStatus.find(function(e){return e.ip.find(function(e){return e.id===ip;});});});return userFound;}module.exports={findUser:findUser,findUserByIp:findUserByIp,findUserState:findUserState,findUsers:findUsers};","map":{"version":3,"names":["users","require","findUser","a","m","userFound","filter","e","alias","email","findUsers","ip","usersFound","userStatus","el","id","findUserByIp","find","onlineState","at","findUserState","module","exports"],"sources":["C:/Users/Autor/Desktop/LaRuinaTV/api/src/Functions/users.js"],"sourcesContent":["const users = require('../users.json')\r\n\r\nfunction findUser(a,m){\r\n    const userFound = users.filter(e=>{return (e.alias === (a) || e.email === (m))})\r\n    return userFound\r\n}\r\n\r\nfunction findUsers(ip){\r\n    const usersFound = users.filter(e=>{return (e.userStatus.filter(e=>{return e.ip.filter(el=>{return el.id === ip})}))})\r\n    return usersFound \r\n}\r\n\r\nfunction findUserByIp(ip){\r\n    const userFound = users.filter(e=>{return (e.userStatus.find(e=>{return e.ip.find(e=>{return (e.id === ip) && (e.onlineState === true)})}))}).at(0)\r\n    return userFound\r\n}\r\n\r\nfunction findUserState(ip){\r\n    const userFound = users.filter(e=>{return (e.userStatus.find(e=>{return e.ip.find(e=>{return (e.id === ip)})}))})\r\n    return userFound\r\n}\r\n\r\nmodule.exports = {\r\n    findUser,\r\n    findUserByIp,\r\n    findUserState,\r\n    findUsers\r\n}"],"mappings":"AAAA,GAAMA,MAAK,CAAGC,OAAO,CAAC,eAAe,CAAC,CAEtC,QAASC,SAAQ,CAACC,CAAC,CAACC,CAAC,CAAC,CAClB,GAAMC,UAAS,CAAGL,KAAK,CAACM,MAAM,CAAC,SAAAC,CAAC,CAAE,CAAC,MAAQA,EAAC,CAACC,KAAK,GAAML,CAAE,EAAII,CAAC,CAACE,KAAK,GAAML,CAAE,CAAC,CAAC,CAAC,CAChF,MAAOC,UAAS,CACpB,CAEA,QAASK,UAAS,CAACC,EAAE,CAAC,CAClB,GAAMC,WAAU,CAAGZ,KAAK,CAACM,MAAM,CAAC,SAAAC,CAAC,CAAE,CAAC,MAAQA,EAAC,CAACM,UAAU,CAACP,MAAM,CAAC,SAAAC,CAAC,CAAE,CAAC,MAAOA,EAAC,CAACI,EAAE,CAACL,MAAM,CAAC,SAAAQ,EAAE,CAAE,CAAC,MAAOA,GAAE,CAACC,EAAE,GAAKJ,EAAE,EAAC,CAAC,EAAC,CAAC,CAAC,CAAC,CAAC,CACtH,MAAOC,WAAU,CACrB,CAEA,QAASI,aAAY,CAACL,EAAE,CAAC,CACrB,GAAMN,UAAS,CAAGL,KAAK,CAACM,MAAM,CAAC,SAAAC,CAAC,CAAE,CAAC,MAAQA,EAAC,CAACM,UAAU,CAACI,IAAI,CAAC,SAAAV,CAAC,CAAE,CAAC,MAAOA,EAAC,CAACI,EAAE,CAACM,IAAI,CAAC,SAAAV,CAAC,CAAE,CAAC,MAAQA,EAAC,CAACQ,EAAE,GAAKJ,EAAE,EAAMJ,CAAC,CAACW,WAAW,GAAK,IAAK,EAAC,CAAC,EAAC,CAAC,CAAC,CAAC,CAAC,CAACC,EAAE,CAAC,CAAC,CAAC,CACnJ,MAAOd,UAAS,CACpB,CAEA,QAASe,cAAa,CAACT,EAAE,CAAC,CACtB,GAAMN,UAAS,CAAGL,KAAK,CAACM,MAAM,CAAC,SAAAC,CAAC,CAAE,CAAC,MAAQA,EAAC,CAACM,UAAU,CAACI,IAAI,CAAC,SAAAV,CAAC,CAAE,CAAC,MAAOA,EAAC,CAACI,EAAE,CAACM,IAAI,CAAC,SAAAV,CAAC,CAAE,CAAC,MAAQA,EAAC,CAACQ,EAAE,GAAKJ,EAAE,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC,CAAC,CACjH,MAAON,UAAS,CACpB,CAEAgB,MAAM,CAACC,OAAO,CAAG,CACbpB,QAAQ,CAARA,QAAQ,CACRc,YAAY,CAAZA,YAAY,CACZI,aAAa,CAAbA,aAAa,CACbV,SAAS,CAATA,SACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}