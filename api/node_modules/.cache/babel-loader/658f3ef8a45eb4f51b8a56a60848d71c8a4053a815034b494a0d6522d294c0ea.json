{"ast":null,"code":"/*!\n * merge-descriptors\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */'use strict';/**\n * Module exports.\n * @public\n */module.exports=merge;/**\n * Module variables.\n * @private\n */var hasOwnProperty=Object.prototype.hasOwnProperty;/**\n * Merge the property descriptors of `src` into `dest`\n *\n * @param {object} dest Object to add descriptors to\n * @param {object} src Object to clone descriptors from\n * @param {boolean} [redefine=true] Redefine `dest` properties with `src` properties\n * @returns {object} Reference to dest\n * @public\n */function merge(dest,src,redefine){if(!dest){throw new TypeError('argument dest is required');}if(!src){throw new TypeError('argument src is required');}if(redefine===undefined){// Default to true\nredefine=true;}Object.getOwnPropertyNames(src).forEach(function forEachOwnPropertyName(name){if(!redefine&&hasOwnProperty.call(dest,name)){// Skip desriptor\nreturn;}// Copy descriptor\nvar descriptor=Object.getOwnPropertyDescriptor(src,name);Object.defineProperty(dest,name,descriptor);});return dest;}","map":{"version":3,"names":["module","exports","merge","hasOwnProperty","Object","prototype","dest","src","redefine","TypeError","undefined","getOwnPropertyNames","forEach","forEachOwnPropertyName","name","call","descriptor","getOwnPropertyDescriptor","defineProperty"],"sources":["C:/Users/Autor/Desktop/LaRuinaTV/api/src/node_modules/merge-descriptors/index.js"],"sourcesContent":["/*!\n * merge-descriptors\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = merge\n\n/**\n * Module variables.\n * @private\n */\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty\n\n/**\n * Merge the property descriptors of `src` into `dest`\n *\n * @param {object} dest Object to add descriptors to\n * @param {object} src Object to clone descriptors from\n * @param {boolean} [redefine=true] Redefine `dest` properties with `src` properties\n * @returns {object} Reference to dest\n * @public\n */\n\nfunction merge(dest, src, redefine) {\n  if (!dest) {\n    throw new TypeError('argument dest is required')\n  }\n\n  if (!src) {\n    throw new TypeError('argument src is required')\n  }\n\n  if (redefine === undefined) {\n    // Default to true\n    redefine = true\n  }\n\n  Object.getOwnPropertyNames(src).forEach(function forEachOwnPropertyName(name) {\n    if (!redefine && hasOwnProperty.call(dest, name)) {\n      // Skip desriptor\n      return\n    }\n\n    // Copy descriptor\n    var descriptor = Object.getOwnPropertyDescriptor(src, name)\n    Object.defineProperty(dest, name, descriptor)\n  })\n\n  return dest\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA,GAEA,YAAY,CAEZ;AACA;AACA;AACA,GAEAA,MAAM,CAACC,OAAO,CAAGC,KAAK,CAEtB;AACA;AACA;AACA,GAEA,GAAIC,eAAc,CAAGC,MAAM,CAACC,SAAS,CAACF,cAAc,CAEpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAEA,QAASD,MAAK,CAACI,IAAI,CAAEC,GAAG,CAAEC,QAAQ,CAAE,CAClC,GAAI,CAACF,IAAI,CAAE,CACT,KAAM,IAAIG,UAAS,CAAC,2BAA2B,CAAC,CAClD,CAEA,GAAI,CAACF,GAAG,CAAE,CACR,KAAM,IAAIE,UAAS,CAAC,0BAA0B,CAAC,CACjD,CAEA,GAAID,QAAQ,GAAKE,SAAS,CAAE,CAC1B;AACAF,QAAQ,CAAG,IAAI,CACjB,CAEAJ,MAAM,CAACO,mBAAmB,CAACJ,GAAG,CAAC,CAACK,OAAO,CAAC,QAASC,uBAAsB,CAACC,IAAI,CAAE,CAC5E,GAAI,CAACN,QAAQ,EAAIL,cAAc,CAACY,IAAI,CAACT,IAAI,CAAEQ,IAAI,CAAC,CAAE,CAChD;AACA,OACF,CAEA;AACA,GAAIE,WAAU,CAAGZ,MAAM,CAACa,wBAAwB,CAACV,GAAG,CAAEO,IAAI,CAAC,CAC3DV,MAAM,CAACc,cAAc,CAACZ,IAAI,CAAEQ,IAAI,CAAEE,UAAU,CAAC,CAC/C,CAAC,CAAC,CAEF,MAAOV,KAAI,CACb"},"metadata":{},"sourceType":"module","externalDependencies":[]}