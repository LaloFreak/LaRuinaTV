{"ast":null,"code":"/*!\n * finalhandler\n * Copyright(c) 2014-2022 Douglas Christopher Wilson\n * MIT Licensed\n */'use strict';/**\n * Module dependencies.\n * @private\n */var debug=require('debug')('finalhandler');var encodeUrl=require('encodeurl');var escapeHtml=require('escape-html');var onFinished=require('on-finished');var parseUrl=require('parseurl');var statuses=require('statuses');var unpipe=require('unpipe');/**\n * Module variables.\n * @private\n */var DOUBLE_SPACE_REGEXP=/\\x20{2}/g;var NEWLINE_REGEXP=/\\n/g;/* istanbul ignore next */var defer=typeof setImmediate==='function'?setImmediate:function(fn){process.nextTick(fn.bind.apply(fn,arguments));};var isFinished=onFinished.isFinished;/**\n * Create a minimal HTML document.\n *\n * @param {string} message\n * @private\n */function createHtmlDocument(message){var body=escapeHtml(message).replace(NEWLINE_REGEXP,'<br>').replace(DOUBLE_SPACE_REGEXP,' &nbsp;');return'<!DOCTYPE html>\\n'+'<html lang=\"en\">\\n'+'<head>\\n'+'<meta charset=\"utf-8\">\\n'+'<title>Error</title>\\n'+'</head>\\n'+'<body>\\n'+'<pre>'+body+'</pre>\\n'+'</body>\\n'+'</html>\\n';}/**\n * Module exports.\n * @public\n */module.exports=finalhandler;/**\n * Create a function to handle the final response.\n *\n * @param {Request} req\n * @param {Response} res\n * @param {Object} [options]\n * @return {Function}\n * @public\n */function finalhandler(req,res,options){var opts=options||{};// get environment\nvar env=opts.env||process.env.NODE_ENV||'development';// get error callback\nvar onerror=opts.onerror;return function(err){var headers;var msg;var status;// ignore 404 on in-flight response\nif(!err&&headersSent(res)){debug('cannot 404 after headers sent');return;}// unhandled error\nif(err){// respect status code from error\nstatus=getErrorStatusCode(err);if(status===undefined){// fallback to status code on response\nstatus=getResponseStatusCode(res);}else{// respect headers from error\nheaders=getErrorHeaders(err);}// get error message\nmsg=getErrorMessage(err,status,env);}else{// not found\nstatus=404;msg='Cannot '+req.method+' '+encodeUrl(getResourceName(req));}debug('default %s',status);// schedule onerror callback\nif(err&&onerror){defer(onerror,err,req,res);}// cannot actually respond\nif(headersSent(res)){debug('cannot %d after headers sent',status);req.socket.destroy();return;}// send response\nsend(req,res,status,headers,msg);};}/**\n * Get headers from Error object.\n *\n * @param {Error} err\n * @return {object}\n * @private\n */function getErrorHeaders(err){if(!err.headers||typeof err.headers!=='object'){return undefined;}var headers=Object.create(null);var keys=Object.keys(err.headers);for(var i=0;i<keys.length;i++){var key=keys[i];headers[key]=err.headers[key];}return headers;}/**\n * Get message from Error object, fallback to status message.\n *\n * @param {Error} err\n * @param {number} status\n * @param {string} env\n * @return {string}\n * @private\n */function getErrorMessage(err,status,env){var msg;if(env!=='production'){// use err.stack, which typically includes err.message\nmsg=err.stack;// fallback to err.toString() when possible\nif(!msg&&typeof err.toString==='function'){msg=err.toString();}}return msg||statuses.message[status];}/**\n * Get status code from Error object.\n *\n * @param {Error} err\n * @return {number}\n * @private\n */function getErrorStatusCode(err){// check err.status\nif(typeof err.status==='number'&&err.status>=400&&err.status<600){return err.status;}// check err.statusCode\nif(typeof err.statusCode==='number'&&err.statusCode>=400&&err.statusCode<600){return err.statusCode;}return undefined;}/**\n * Get resource name for the request.\n *\n * This is typically just the original pathname of the request\n * but will fallback to \"resource\" is that cannot be determined.\n *\n * @param {IncomingMessage} req\n * @return {string}\n * @private\n */function getResourceName(req){try{return parseUrl.original(req).pathname;}catch(e){return'resource';}}/**\n * Get status code from response.\n *\n * @param {OutgoingMessage} res\n * @return {number}\n * @private\n */function getResponseStatusCode(res){var status=res.statusCode;// default status code to 500 if outside valid range\nif(typeof status!=='number'||status<400||status>599){status=500;}return status;}/**\n * Determine if the response headers have been sent.\n *\n * @param {object} res\n * @returns {boolean}\n * @private\n */function headersSent(res){return typeof res.headersSent!=='boolean'?Boolean(res._header):res.headersSent;}/**\n * Send response.\n *\n * @param {IncomingMessage} req\n * @param {OutgoingMessage} res\n * @param {number} status\n * @param {object} headers\n * @param {string} message\n * @private\n */function send(req,res,status,headers,message){function write(){// response body\nvar body=createHtmlDocument(message);// response status\nres.statusCode=status;res.statusMessage=statuses.message[status];// remove any content headers\nres.removeHeader('Content-Encoding');res.removeHeader('Content-Language');res.removeHeader('Content-Range');// response headers\nsetHeaders(res,headers);// security headers\nres.setHeader('Content-Security-Policy',\"default-src 'none'\");res.setHeader('X-Content-Type-Options','nosniff');// standard headers\nres.setHeader('Content-Type','text/html; charset=utf-8');res.setHeader('Content-Length',Buffer.byteLength(body,'utf8'));if(req.method==='HEAD'){res.end();return;}res.end(body,'utf8');}if(isFinished(req)){write();return;}// unpipe everything from the request\nunpipe(req);// flush the request\nonFinished(req,write);req.resume();}/**\n * Set response headers from an object.\n *\n * @param {OutgoingMessage} res\n * @param {object} headers\n * @private\n */function setHeaders(res,headers){if(!headers){return;}var keys=Object.keys(headers);for(var i=0;i<keys.length;i++){var key=keys[i];res.setHeader(key,headers[key]);}}","map":{"version":3,"names":["debug","require","encodeUrl","escapeHtml","onFinished","parseUrl","statuses","unpipe","DOUBLE_SPACE_REGEXP","NEWLINE_REGEXP","defer","setImmediate","fn","process","nextTick","bind","apply","arguments","isFinished","createHtmlDocument","message","body","replace","module","exports","finalhandler","req","res","options","opts","env","NODE_ENV","onerror","err","headers","msg","status","headersSent","getErrorStatusCode","undefined","getResponseStatusCode","getErrorHeaders","getErrorMessage","method","getResourceName","socket","destroy","send","Object","create","keys","i","length","key","stack","toString","statusCode","original","pathname","e","Boolean","_header","write","statusMessage","removeHeader","setHeaders","setHeader","Buffer","byteLength","end","resume"],"sources":["C:/Users/Autor/Desktop/LaRuinaTV/api/src/node_modules/finalhandler/index.js"],"sourcesContent":["/*!\n * finalhandler\n * Copyright(c) 2014-2022 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar debug = require('debug')('finalhandler')\nvar encodeUrl = require('encodeurl')\nvar escapeHtml = require('escape-html')\nvar onFinished = require('on-finished')\nvar parseUrl = require('parseurl')\nvar statuses = require('statuses')\nvar unpipe = require('unpipe')\n\n/**\n * Module variables.\n * @private\n */\n\nvar DOUBLE_SPACE_REGEXP = /\\x20{2}/g\nvar NEWLINE_REGEXP = /\\n/g\n\n/* istanbul ignore next */\nvar defer = typeof setImmediate === 'function'\n  ? setImmediate\n  : function (fn) { process.nextTick(fn.bind.apply(fn, arguments)) }\nvar isFinished = onFinished.isFinished\n\n/**\n * Create a minimal HTML document.\n *\n * @param {string} message\n * @private\n */\n\nfunction createHtmlDocument (message) {\n  var body = escapeHtml(message)\n    .replace(NEWLINE_REGEXP, '<br>')\n    .replace(DOUBLE_SPACE_REGEXP, ' &nbsp;')\n\n  return '<!DOCTYPE html>\\n' +\n    '<html lang=\"en\">\\n' +\n    '<head>\\n' +\n    '<meta charset=\"utf-8\">\\n' +\n    '<title>Error</title>\\n' +\n    '</head>\\n' +\n    '<body>\\n' +\n    '<pre>' + body + '</pre>\\n' +\n    '</body>\\n' +\n    '</html>\\n'\n}\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = finalhandler\n\n/**\n * Create a function to handle the final response.\n *\n * @param {Request} req\n * @param {Response} res\n * @param {Object} [options]\n * @return {Function}\n * @public\n */\n\nfunction finalhandler (req, res, options) {\n  var opts = options || {}\n\n  // get environment\n  var env = opts.env || process.env.NODE_ENV || 'development'\n\n  // get error callback\n  var onerror = opts.onerror\n\n  return function (err) {\n    var headers\n    var msg\n    var status\n\n    // ignore 404 on in-flight response\n    if (!err && headersSent(res)) {\n      debug('cannot 404 after headers sent')\n      return\n    }\n\n    // unhandled error\n    if (err) {\n      // respect status code from error\n      status = getErrorStatusCode(err)\n\n      if (status === undefined) {\n        // fallback to status code on response\n        status = getResponseStatusCode(res)\n      } else {\n        // respect headers from error\n        headers = getErrorHeaders(err)\n      }\n\n      // get error message\n      msg = getErrorMessage(err, status, env)\n    } else {\n      // not found\n      status = 404\n      msg = 'Cannot ' + req.method + ' ' + encodeUrl(getResourceName(req))\n    }\n\n    debug('default %s', status)\n\n    // schedule onerror callback\n    if (err && onerror) {\n      defer(onerror, err, req, res)\n    }\n\n    // cannot actually respond\n    if (headersSent(res)) {\n      debug('cannot %d after headers sent', status)\n      req.socket.destroy()\n      return\n    }\n\n    // send response\n    send(req, res, status, headers, msg)\n  }\n}\n\n/**\n * Get headers from Error object.\n *\n * @param {Error} err\n * @return {object}\n * @private\n */\n\nfunction getErrorHeaders (err) {\n  if (!err.headers || typeof err.headers !== 'object') {\n    return undefined\n  }\n\n  var headers = Object.create(null)\n  var keys = Object.keys(err.headers)\n\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i]\n    headers[key] = err.headers[key]\n  }\n\n  return headers\n}\n\n/**\n * Get message from Error object, fallback to status message.\n *\n * @param {Error} err\n * @param {number} status\n * @param {string} env\n * @return {string}\n * @private\n */\n\nfunction getErrorMessage (err, status, env) {\n  var msg\n\n  if (env !== 'production') {\n    // use err.stack, which typically includes err.message\n    msg = err.stack\n\n    // fallback to err.toString() when possible\n    if (!msg && typeof err.toString === 'function') {\n      msg = err.toString()\n    }\n  }\n\n  return msg || statuses.message[status]\n}\n\n/**\n * Get status code from Error object.\n *\n * @param {Error} err\n * @return {number}\n * @private\n */\n\nfunction getErrorStatusCode (err) {\n  // check err.status\n  if (typeof err.status === 'number' && err.status >= 400 && err.status < 600) {\n    return err.status\n  }\n\n  // check err.statusCode\n  if (typeof err.statusCode === 'number' && err.statusCode >= 400 && err.statusCode < 600) {\n    return err.statusCode\n  }\n\n  return undefined\n}\n\n/**\n * Get resource name for the request.\n *\n * This is typically just the original pathname of the request\n * but will fallback to \"resource\" is that cannot be determined.\n *\n * @param {IncomingMessage} req\n * @return {string}\n * @private\n */\n\nfunction getResourceName (req) {\n  try {\n    return parseUrl.original(req).pathname\n  } catch (e) {\n    return 'resource'\n  }\n}\n\n/**\n * Get status code from response.\n *\n * @param {OutgoingMessage} res\n * @return {number}\n * @private\n */\n\nfunction getResponseStatusCode (res) {\n  var status = res.statusCode\n\n  // default status code to 500 if outside valid range\n  if (typeof status !== 'number' || status < 400 || status > 599) {\n    status = 500\n  }\n\n  return status\n}\n\n/**\n * Determine if the response headers have been sent.\n *\n * @param {object} res\n * @returns {boolean}\n * @private\n */\n\nfunction headersSent (res) {\n  return typeof res.headersSent !== 'boolean'\n    ? Boolean(res._header)\n    : res.headersSent\n}\n\n/**\n * Send response.\n *\n * @param {IncomingMessage} req\n * @param {OutgoingMessage} res\n * @param {number} status\n * @param {object} headers\n * @param {string} message\n * @private\n */\n\nfunction send (req, res, status, headers, message) {\n  function write () {\n    // response body\n    var body = createHtmlDocument(message)\n\n    // response status\n    res.statusCode = status\n    res.statusMessage = statuses.message[status]\n\n    // remove any content headers\n    res.removeHeader('Content-Encoding')\n    res.removeHeader('Content-Language')\n    res.removeHeader('Content-Range')\n\n    // response headers\n    setHeaders(res, headers)\n\n    // security headers\n    res.setHeader('Content-Security-Policy', \"default-src 'none'\")\n    res.setHeader('X-Content-Type-Options', 'nosniff')\n\n    // standard headers\n    res.setHeader('Content-Type', 'text/html; charset=utf-8')\n    res.setHeader('Content-Length', Buffer.byteLength(body, 'utf8'))\n\n    if (req.method === 'HEAD') {\n      res.end()\n      return\n    }\n\n    res.end(body, 'utf8')\n  }\n\n  if (isFinished(req)) {\n    write()\n    return\n  }\n\n  // unpipe everything from the request\n  unpipe(req)\n\n  // flush the request\n  onFinished(req, write)\n  req.resume()\n}\n\n/**\n * Set response headers from an object.\n *\n * @param {OutgoingMessage} res\n * @param {object} headers\n * @private\n */\n\nfunction setHeaders (res, headers) {\n  if (!headers) {\n    return\n  }\n\n  var keys = Object.keys(headers)\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i]\n    res.setHeader(key, headers[key])\n  }\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,GAEA,YAAY,CAEZ;AACA;AACA;AACA,GAEA,GAAIA,MAAK,CAAGC,OAAO,CAAC,OAAO,CAAC,CAAC,cAAc,CAAC,CAC5C,GAAIC,UAAS,CAAGD,OAAO,CAAC,WAAW,CAAC,CACpC,GAAIE,WAAU,CAAGF,OAAO,CAAC,aAAa,CAAC,CACvC,GAAIG,WAAU,CAAGH,OAAO,CAAC,aAAa,CAAC,CACvC,GAAII,SAAQ,CAAGJ,OAAO,CAAC,UAAU,CAAC,CAClC,GAAIK,SAAQ,CAAGL,OAAO,CAAC,UAAU,CAAC,CAClC,GAAIM,OAAM,CAAGN,OAAO,CAAC,QAAQ,CAAC,CAE9B;AACA;AACA;AACA,GAEA,GAAIO,oBAAmB,CAAG,UAAU,CACpC,GAAIC,eAAc,CAAG,KAAK,CAE1B,0BACA,GAAIC,MAAK,CAAG,MAAOC,aAAY,GAAK,UAAU,CAC1CA,YAAY,CACZ,SAAUC,EAAE,CAAE,CAAEC,OAAO,CAACC,QAAQ,CAACF,EAAE,CAACG,IAAI,CAACC,KAAK,CAACJ,EAAE,CAAEK,SAAS,CAAC,CAAC,CAAC,CAAC,CACpE,GAAIC,WAAU,CAAGd,UAAU,CAACc,UAAU,CAEtC;AACA;AACA;AACA;AACA;AACA,GAEA,QAASC,mBAAkB,CAAEC,OAAO,CAAE,CACpC,GAAIC,KAAI,CAAGlB,UAAU,CAACiB,OAAO,CAAC,CAC3BE,OAAO,CAACb,cAAc,CAAE,MAAM,CAAC,CAC/Ba,OAAO,CAACd,mBAAmB,CAAE,SAAS,CAAC,CAE1C,MAAO,mBAAmB,CACxB,oBAAoB,CACpB,UAAU,CACV,0BAA0B,CAC1B,wBAAwB,CACxB,WAAW,CACX,UAAU,CACV,OAAO,CAAGa,IAAI,CAAG,UAAU,CAC3B,WAAW,CACX,WAAW,CACf,CAEA;AACA;AACA;AACA,GAEAE,MAAM,CAACC,OAAO,CAAGC,YAAY,CAE7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAEA,QAASA,aAAY,CAAEC,GAAG,CAAEC,GAAG,CAAEC,OAAO,CAAE,CACxC,GAAIC,KAAI,CAAGD,OAAO,EAAI,CAAC,CAAC,CAExB;AACA,GAAIE,IAAG,CAAGD,IAAI,CAACC,GAAG,EAAIjB,OAAO,CAACiB,GAAG,CAACC,QAAQ,EAAI,aAAa,CAE3D;AACA,GAAIC,QAAO,CAAGH,IAAI,CAACG,OAAO,CAE1B,MAAO,UAAUC,GAAG,CAAE,CACpB,GAAIC,QAAO,CACX,GAAIC,IAAG,CACP,GAAIC,OAAM,CAEV;AACA,GAAI,CAACH,GAAG,EAAII,WAAW,CAACV,GAAG,CAAC,CAAE,CAC5B3B,KAAK,CAAC,+BAA+B,CAAC,CACtC,OACF,CAEA;AACA,GAAIiC,GAAG,CAAE,CACP;AACAG,MAAM,CAAGE,kBAAkB,CAACL,GAAG,CAAC,CAEhC,GAAIG,MAAM,GAAKG,SAAS,CAAE,CACxB;AACAH,MAAM,CAAGI,qBAAqB,CAACb,GAAG,CAAC,CACrC,CAAC,IAAM,CACL;AACAO,OAAO,CAAGO,eAAe,CAACR,GAAG,CAAC,CAChC,CAEA;AACAE,GAAG,CAAGO,eAAe,CAACT,GAAG,CAAEG,MAAM,CAAEN,GAAG,CAAC,CACzC,CAAC,IAAM,CACL;AACAM,MAAM,CAAG,GAAG,CACZD,GAAG,CAAG,SAAS,CAAGT,GAAG,CAACiB,MAAM,CAAG,GAAG,CAAGzC,SAAS,CAAC0C,eAAe,CAAClB,GAAG,CAAC,CAAC,CACtE,CAEA1B,KAAK,CAAC,YAAY,CAAEoC,MAAM,CAAC,CAE3B;AACA,GAAIH,GAAG,EAAID,OAAO,CAAE,CAClBtB,KAAK,CAACsB,OAAO,CAAEC,GAAG,CAAEP,GAAG,CAAEC,GAAG,CAAC,CAC/B,CAEA;AACA,GAAIU,WAAW,CAACV,GAAG,CAAC,CAAE,CACpB3B,KAAK,CAAC,8BAA8B,CAAEoC,MAAM,CAAC,CAC7CV,GAAG,CAACmB,MAAM,CAACC,OAAO,EAAE,CACpB,OACF,CAEA;AACAC,IAAI,CAACrB,GAAG,CAAEC,GAAG,CAAES,MAAM,CAAEF,OAAO,CAAEC,GAAG,CAAC,CACtC,CAAC,CACH,CAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAEA,QAASM,gBAAe,CAAER,GAAG,CAAE,CAC7B,GAAI,CAACA,GAAG,CAACC,OAAO,EAAI,MAAOD,IAAG,CAACC,OAAO,GAAK,QAAQ,CAAE,CACnD,MAAOK,UAAS,CAClB,CAEA,GAAIL,QAAO,CAAGc,MAAM,CAACC,MAAM,CAAC,IAAI,CAAC,CACjC,GAAIC,KAAI,CAAGF,MAAM,CAACE,IAAI,CAACjB,GAAG,CAACC,OAAO,CAAC,CAEnC,IAAK,GAAIiB,EAAC,CAAG,CAAC,CAAEA,CAAC,CAAGD,IAAI,CAACE,MAAM,CAAED,CAAC,EAAE,CAAE,CACpC,GAAIE,IAAG,CAAGH,IAAI,CAACC,CAAC,CAAC,CACjBjB,OAAO,CAACmB,GAAG,CAAC,CAAGpB,GAAG,CAACC,OAAO,CAACmB,GAAG,CAAC,CACjC,CAEA,MAAOnB,QAAO,CAChB,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAEA,QAASQ,gBAAe,CAAET,GAAG,CAAEG,MAAM,CAAEN,GAAG,CAAE,CAC1C,GAAIK,IAAG,CAEP,GAAIL,GAAG,GAAK,YAAY,CAAE,CACxB;AACAK,GAAG,CAAGF,GAAG,CAACqB,KAAK,CAEf;AACA,GAAI,CAACnB,GAAG,EAAI,MAAOF,IAAG,CAACsB,QAAQ,GAAK,UAAU,CAAE,CAC9CpB,GAAG,CAAGF,GAAG,CAACsB,QAAQ,EAAE,CACtB,CACF,CAEA,MAAOpB,IAAG,EAAI7B,QAAQ,CAACc,OAAO,CAACgB,MAAM,CAAC,CACxC,CAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAEA,QAASE,mBAAkB,CAAEL,GAAG,CAAE,CAChC;AACA,GAAI,MAAOA,IAAG,CAACG,MAAM,GAAK,QAAQ,EAAIH,GAAG,CAACG,MAAM,EAAI,GAAG,EAAIH,GAAG,CAACG,MAAM,CAAG,GAAG,CAAE,CAC3E,MAAOH,IAAG,CAACG,MAAM,CACnB,CAEA;AACA,GAAI,MAAOH,IAAG,CAACuB,UAAU,GAAK,QAAQ,EAAIvB,GAAG,CAACuB,UAAU,EAAI,GAAG,EAAIvB,GAAG,CAACuB,UAAU,CAAG,GAAG,CAAE,CACvF,MAAOvB,IAAG,CAACuB,UAAU,CACvB,CAEA,MAAOjB,UAAS,CAClB,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAEA,QAASK,gBAAe,CAAElB,GAAG,CAAE,CAC7B,GAAI,CACF,MAAOrB,SAAQ,CAACoD,QAAQ,CAAC/B,GAAG,CAAC,CAACgC,QAAQ,CACxC,CAAE,MAAOC,CAAC,CAAE,CACV,MAAO,UAAU,CACnB,CACF,CAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAEA,QAASnB,sBAAqB,CAAEb,GAAG,CAAE,CACnC,GAAIS,OAAM,CAAGT,GAAG,CAAC6B,UAAU,CAE3B;AACA,GAAI,MAAOpB,OAAM,GAAK,QAAQ,EAAIA,MAAM,CAAG,GAAG,EAAIA,MAAM,CAAG,GAAG,CAAE,CAC9DA,MAAM,CAAG,GAAG,CACd,CAEA,MAAOA,OAAM,CACf,CAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAEA,QAASC,YAAW,CAAEV,GAAG,CAAE,CACzB,MAAO,OAAOA,IAAG,CAACU,WAAW,GAAK,SAAS,CACvCuB,OAAO,CAACjC,GAAG,CAACkC,OAAO,CAAC,CACpBlC,GAAG,CAACU,WAAW,CACrB,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAEA,QAASU,KAAI,CAAErB,GAAG,CAAEC,GAAG,CAAES,MAAM,CAAEF,OAAO,CAAEd,OAAO,CAAE,CACjD,QAAS0C,MAAK,EAAI,CAChB;AACA,GAAIzC,KAAI,CAAGF,kBAAkB,CAACC,OAAO,CAAC,CAEtC;AACAO,GAAG,CAAC6B,UAAU,CAAGpB,MAAM,CACvBT,GAAG,CAACoC,aAAa,CAAGzD,QAAQ,CAACc,OAAO,CAACgB,MAAM,CAAC,CAE5C;AACAT,GAAG,CAACqC,YAAY,CAAC,kBAAkB,CAAC,CACpCrC,GAAG,CAACqC,YAAY,CAAC,kBAAkB,CAAC,CACpCrC,GAAG,CAACqC,YAAY,CAAC,eAAe,CAAC,CAEjC;AACAC,UAAU,CAACtC,GAAG,CAAEO,OAAO,CAAC,CAExB;AACAP,GAAG,CAACuC,SAAS,CAAC,yBAAyB,CAAE,oBAAoB,CAAC,CAC9DvC,GAAG,CAACuC,SAAS,CAAC,wBAAwB,CAAE,SAAS,CAAC,CAElD;AACAvC,GAAG,CAACuC,SAAS,CAAC,cAAc,CAAE,0BAA0B,CAAC,CACzDvC,GAAG,CAACuC,SAAS,CAAC,gBAAgB,CAAEC,MAAM,CAACC,UAAU,CAAC/C,IAAI,CAAE,MAAM,CAAC,CAAC,CAEhE,GAAIK,GAAG,CAACiB,MAAM,GAAK,MAAM,CAAE,CACzBhB,GAAG,CAAC0C,GAAG,EAAE,CACT,OACF,CAEA1C,GAAG,CAAC0C,GAAG,CAAChD,IAAI,CAAE,MAAM,CAAC,CACvB,CAEA,GAAIH,UAAU,CAACQ,GAAG,CAAC,CAAE,CACnBoC,KAAK,EAAE,CACP,OACF,CAEA;AACAvD,MAAM,CAACmB,GAAG,CAAC,CAEX;AACAtB,UAAU,CAACsB,GAAG,CAAEoC,KAAK,CAAC,CACtBpC,GAAG,CAAC4C,MAAM,EAAE,CACd,CAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAEA,QAASL,WAAU,CAAEtC,GAAG,CAAEO,OAAO,CAAE,CACjC,GAAI,CAACA,OAAO,CAAE,CACZ,OACF,CAEA,GAAIgB,KAAI,CAAGF,MAAM,CAACE,IAAI,CAAChB,OAAO,CAAC,CAC/B,IAAK,GAAIiB,EAAC,CAAG,CAAC,CAAEA,CAAC,CAAGD,IAAI,CAACE,MAAM,CAAED,CAAC,EAAE,CAAE,CACpC,GAAIE,IAAG,CAAGH,IAAI,CAACC,CAAC,CAAC,CACjBxB,GAAG,CAACuC,SAAS,CAACb,GAAG,CAAEnB,OAAO,CAACmB,GAAG,CAAC,CAAC,CAClC,CACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}