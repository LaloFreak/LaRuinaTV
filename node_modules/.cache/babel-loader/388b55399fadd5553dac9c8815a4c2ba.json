{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Autor\\\\Desktop\\\\LaRuinaTV\\\\src\\\\components\\\\Home\\\\Browser.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport s from \"../Utils/css/Slider.module.css\";\nimport Visor from '../Utils/Visor';\nimport Footer from '../Utils/Footer';\nimport Slider from '../Utils/Slider';\nimport { BodyCss } from '../../functions/BodyCss';\nimport { useDispatch } from 'react-redux';\nimport { useSelector } from 'react-redux';\nimport { useLocation } from 'react-router-dom/cjs/react-router-dom.min';\nimport { getCategorias, getLoggedAccount, getPosts, getUsers, resetMedia } from '../../middlewares/redux/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Browser = () => {\n  _s();\n  BodyCss();\n  const {\n    pathname\n  } = useLocation();\n  const dispatch = useDispatch();\n  const userState = useSelector(state => state.userState);\n  const visorList = useSelector(state => state.visorList);\n  const listaCategorias = useSelector(state => state.listaCategorias);\n  const sliderCategoria = categoria => visorList.filter(e => e.categoria.find(el => el === categoria));\n  useEffect(() => {\n    dispatch(resetMedia());\n    dispatch(getUsers());\n    dispatch(getPosts());\n    dispatch(getLoggedAccount(pathname));\n  }, [dispatch, pathname]);\n  useEffect(() => {\n    dispatch(getCategorias(visorList));\n  }, [visorList, dispatch]);\n  let id = 0;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"browserBody\",\n    children: [(userState ? userState === \"online\" : null && (visorList === null || visorList === void 0 ? void 0 : visorList.length) > 1) ? /*#__PURE__*/_jsxDEV(Visor, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 77\n    }, this) : dispatch(getPosts()), (userState ? userState === \"online\" : null && (visorList === null || visorList === void 0 ? void 0 : visorList.length) > 1) ? [...new Set(listaCategorias)].map(e => {\n      if (id === 0) {\n        id++;\n        return /*#__PURE__*/_jsxDEV(Slider, {\n          titulo: 'Contenido',\n          categoria: visorList,\n          style: s,\n          id: `s`\n        }, `s`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 44\n        }, this);\n      } else {\n        id = e.id;\n        return /*#__PURE__*/_jsxDEV(Slider, {\n          titulo: e,\n          categoria: sliderCategoria(e),\n          style: s,\n          id: `s${e.id}`\n        }, `s${e}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 40\n        }, this);\n      }\n    }) : dispatch(getPosts()), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n_s(Browser, \"sfPlvQ6W7TCA4jmU4H7F/mzHtaI=\", false, function () {\n  return [useLocation, useDispatch, useSelector, useSelector, useSelector];\n});\n_c = Browser;\nexport default Browser;\nvar _c;\n$RefreshReg$(_c, \"Browser\");","map":{"version":3,"names":["React","useEffect","s","Visor","Footer","Slider","BodyCss","useDispatch","useSelector","useLocation","getCategorias","getLoggedAccount","getPosts","getUsers","resetMedia","Browser","pathname","dispatch","userState","state","visorList","listaCategorias","sliderCategoria","categoria","filter","e","find","el","id","length","Set","map"],"sources":["C:/Users/Autor/Desktop/LaRuinaTV/src/components/Home/Browser.jsx"],"sourcesContent":["import React, { useEffect } from 'react';\nimport s from \"../Utils/css/Slider.module.css\";\nimport Visor from '../Utils/Visor';\nimport Footer from '../Utils/Footer';\nimport Slider from '../Utils/Slider';\nimport { BodyCss } from '../../functions/BodyCss';\nimport { useDispatch } from 'react-redux';\nimport { useSelector } from 'react-redux';\nimport { useLocation } from 'react-router-dom/cjs/react-router-dom.min';\nimport { getCategorias, getLoggedAccount, getPosts, getUsers, resetMedia } from '../../middlewares/redux/actions';\n\nconst Browser = () => {\n    BodyCss()\n    const {pathname} = useLocation()\n    const dispatch = useDispatch()\n    const userState = useSelector(state=> state.userState)\n    const visorList = useSelector(state=>state.visorList)\n    const listaCategorias = useSelector(state=>state.listaCategorias)\n    const sliderCategoria = (categoria) => visorList.filter(e=>e.categoria.find(el=>el===categoria))\n    useEffect(()=>{\n        dispatch(resetMedia())\n        dispatch(getUsers())\n        dispatch(getPosts())\n        dispatch(getLoggedAccount(pathname))\n    },[dispatch, pathname])\n    useEffect(()=>{\n        dispatch(getCategorias(visorList))\n    },[visorList, dispatch])\n \n    let id = 0\n    return (\n        <div className='browserBody'>\n\n{/* ---------------------VISOR--------------------- */}\n    {\n        (userState? userState === \"online\":null && visorList?.length > 1 )? <Visor/> : dispatch(getPosts())\n    }\n\n{/* --------------------SLIDERS-------------------- */}\n    {   \n        (userState? userState === \"online\":null && visorList?.length > 1)? \n        ([...new Set(listaCategorias)].map(e=>\n            {\n                if(id === 0){ id++; return <Slider titulo={'Contenido'} categoria={visorList} style={s} id={`s`}key={`s`}/>}\n                else{id = e.id; return <Slider titulo={e} categoria={sliderCategoria(e)} style={s} id={`s${e.id}`} key={`s${e}`}/>}\n            }\n        )) : dispatch(getPosts())\n    }\n\n{/* ---------------------FOOTER--------------------- */}\n\n                        <Footer/>\n\n        </div>\n    )\n}\n\nexport default Browser"],"mappings":"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"},"metadata":{},"sourceType":"module"}